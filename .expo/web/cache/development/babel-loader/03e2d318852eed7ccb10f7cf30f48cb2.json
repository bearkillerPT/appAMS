{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nvar INITIAL_CART = {\n  cart: []\n};\nexport var addPrato = function addPrato(prato) {\n  return {\n    'type': 'addPrato',\n    'payload': prato\n  };\n};\n\nfunction cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_CART;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"reducer\");\n  console.log(state);\n  console.log(action);\n\n  switch (action.type) {\n    case 'addPrato':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: state.cart.concat(action.payload)\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  cartReducer: cartReducer\n});","map":{"version":3,"sources":["D:/dev/appAmsree/assets/cartState.js"],"names":["combineReducers","INITIAL_CART","cart","addPrato","prato","cartReducer","state","action","console","log","type","concat","payload"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;AAIA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAK;AAC9B,YAAS,UADqB;AAE9B,eAAYA;AAFkB,GAAL;AAAA,CAAtB;;AAKP,SAASC,WAAT,GAAqD;AAAA,MAAhCC,KAAgC,uEAAxBL,YAAwB;AAAA,MAAVM,MAAU;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAK,UAAL;AACI,6CAAUJ,KAAV;AACAJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWS,MAAX,CAAkBJ,MAAM,CAACK,OAAzB;AADN;;AAEJ;AACI,aAAON,KAAP;AALR;AAOH;;AAED,eAAeN,eAAe,CAAC;AAC3BK,EAAAA,WAAW,EAAEA;AADc,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\r\nconst INITIAL_CART = {\r\n    cart: []\r\n}\r\n\r\nexport const addPrato = prato => ({\r\n    'type' : 'addPrato',\r\n    'payload' : prato\r\n});\r\n\r\nfunction cartReducer(state = INITIAL_CART, action)   {\r\n    console.log(\"reducer\")\r\n    console.log(state)\r\n    console.log(action)\r\n    switch(action.type) {\r\n        case 'addPrato':\r\n            return{...state,\r\n            cart: state.cart.concat(action.payload)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    cartReducer: cartReducer\r\n  });\r\n  "]},"metadata":{},"sourceType":"module"}