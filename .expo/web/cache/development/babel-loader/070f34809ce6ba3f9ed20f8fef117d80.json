{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\appAMS\\\\screens\\\\AppEstafeta\\\\Feedback.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport { Rating } from 'react-native-ratings';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { restaurants } from \"./AppEstafeta\";\nexport default function Feedback(_ref) {\n  var route = _ref.route;\n  console.log(route);\n  var estafeta = route.params.estafeta;\n\n  var getAverageRate = function getAverageRate() {\n    var res = 0;\n    var count = 0;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(estafeta.feedback), _step; !(_step = _iterator()).done;) {\n      var feedback = _step.value;\n      console.log(feedback);\n      res += feedback.rating;\n      count += 1;\n    }\n\n    return 1.0 * res / count;\n  };\n\n  var averageR = getAverageRate();\n  console.log(averageR);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Feedback das entregas:\"), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, estafeta.feedback.map(function (pedido) {\n    return React.createElement(View, {\n      style: styles.button,\n      key: pedido.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: restaurants[pedido.restaurante].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }), React.createElement(View, {\n      style: styles.containerColumn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.restaurantesOffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }\n    }, pedido.restaurante), React.createElement(Text, {\n      style: styles.foodText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 37\n      }\n    }, \"Rating:\", '\\n', \" \"), React.createElement(Rating, {\n      type: \"star\",\n      readonly: true,\n      startingValue: pedido.rating,\n      tintColor: \"rgb(242,242,242)\",\n      style: styles.rating,\n      imageSize: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 37\n      }\n    }))));\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Average Rating: \"), React.createElement(View, {\n    style: styles.containerRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, React.createElement(Rating, {\n    type: \"star\",\n    readonly: true,\n    tintColor: \"rgb(242,242,242)\",\n    startingValue: averageR,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      fontWeight: 'bold',\n      textAlign: 'left',\n      color: 'black',\n      alignSelf: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, averageR.toFixed(2), \"/5!\")))));\n}\nvar styles = StyleSheet.create({\n  containerRow: {\n    paddingBottom: 10,\n    flexDirection: 'row'\n  },\n  containerColumn: {\n    paddingLeft: 10,\n    paddingBottom: 10,\n    flexDirection: 'column'\n  },\n  restaurantesOffer: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    color: 'black'\n  },\n  foodText: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  button: {\n    padding: 5,\n    borderRadius: 13\n  },\n  image: {\n    width: 150,\n    height: 100\n  },\n  rating: {\n    borderRightWidth: 500,\n    borderRightColor: 'rgba(0,0,0,0)'\n  }\n});","map":{"version":3,"sources":["D:/dev/appAMS/screens/AppEstafeta/Feedback.js"],"names":["React","Rating","restaurants","Feedback","route","console","log","estafeta","params","getAverageRate","res","count","feedback","rating","averageR","styles","restaurantesOffer","map","pedido","button","id","containerRow","image","restaurante","containerColumn","foodText","fontSize","fontWeight","textAlign","color","alignSelf","toFixed","StyleSheet","create","paddingBottom","flexDirection","paddingLeft","padding","borderRadius","width","height","borderRightWidth","borderRightColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Rating } from 'react-native-ratings';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\r\nimport { restaurants } from './AppEstafeta';\r\nexport default function Feedback({ route }) {\r\n    //<Image so(urce={restaurante.image} style={styles.image}/>\r\n    console.log(route);\r\n    const estafeta = route.params.estafeta;\r\n    const getAverageRate = () => {\r\n        let res = 0;\r\n        let count = 0;\r\n        for (let feedback of estafeta.feedback) {\r\n            console.log(feedback);\r\n            res += feedback.rating;\r\n            count += 1;\r\n        }\r\n        return (1.0 * res / count);\r\n    }\r\n    const averageR = getAverageRate();\r\n    console.log(averageR);\r\n    return (\r\n        <View>\r\n            <Text style={styles.restaurantesOffer}>Feedback das entregas:</Text>\r\n            <ScrollView>{\r\n                estafeta.feedback.map(pedido => {\r\n                    return (\r\n                        <View style={styles.button} key={pedido.id}>\r\n                            <View style={styles.containerRow}>\r\n                                <Image style={styles.image} source={restaurants[pedido.restaurante].image} />\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{pedido.restaurante}</Text>\r\n                                    <Text style={styles.foodText}>Rating:\r\n                                    {'\\n'} </Text>\r\n                                    <Rating\r\n                                        type='star'\r\n                                        readonly\r\n                                        startingValue={pedido.rating}\r\n                                        tintColor='rgb(242,242,242)'\r\n                                        style={styles.rating}\r\n                                        imageSize={15}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    );\r\n                })\r\n            }\r\n                <View>\r\n                    <Text style={styles.restaurantesOffer}>Average Rating: </Text>\r\n                    <View style={styles.containerRow}>\r\n                        <Rating\r\n                            type='star'\r\n                            readonly\r\n                            tintColor='rgb(242,242,242)'\r\n                            startingValue={averageR}\r\n                        />\r\n                        <Text style={{\r\n                            fontSize: 15,\r\n                            fontWeight: 'bold',\r\n                            textAlign: 'left',\r\n                            color: 'black',\r\n                            alignSelf: 'center'\r\n                        }}>{averageR.toFixed(2)}/5!</Text>\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        </View >\r\n\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        paddingBottom: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 5,\r\n        borderRadius: 13\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    },\r\n    rating: {\r\n        borderRightWidth: 500,\r\n        borderRightColor: 'rgba(0,0,0,0)',\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}