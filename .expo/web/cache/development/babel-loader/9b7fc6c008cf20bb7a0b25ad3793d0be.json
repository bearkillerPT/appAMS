{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\appAmsree\\\\screens\\\\AppCliente\\\\Cart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { db, images, store } from \"../../App\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar imgQuichVeg = require(\"../../assets/quicheVegsGluten.jpg\");\n\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nvar imgCremeEspi = require(\"../../assets/cremedeespinafres.jpg\");\n\nvar imgSaladaQSerra = require(\"../../assets/saladaqueijoserra.jpg\");\n\nexport function PedidoScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      morada = _useState2[0],\n      setMorada = _useState2[1];\n\n  var cart = route.params.cart;\n  var user = route.params.user;\n  var restaurante = \"\";\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Nutrilink\"), React.createElement(View, {\n    style: styles.containerColumn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      fontWeight: 'bold',\n      textAlign: 'left',\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"Pratos:\"), Object.keys(cart).map(function (prato) {\n    restaurante = cart[prato].Restaurante;\n    return React.createElement(View, {\n      key: cart[prato].Id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"white\",\n        paddingHorizontal: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 64\n      }\n    }, cart[prato].Name));\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      fontWeight: 'bold',\n      textAlign: 'left',\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Restaurante:\"), React.createElement(Text, {\n    style: {\n      color: \"white\",\n      paddingHorizontal: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, restaurante)), React.createElement(View, {\n    style: styles.inputView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Morada\",\n    style: styles.input,\n    onChangeText: function onChangeText(morada) {\n      return setMorada(morada);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.containerRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.payButtonContainer,\n    onPress: function onPress() {\n      db.ref(\"restaurantes/\" + restaurante + \"/pedidos\").push({\n        \"Id\": \"cart\" + morada,\n        \"Pratos\": cart,\n        \"Status\": \"ordered\",\n        \"Morada\": morada\n      });\n      db.ref(\"Users/\" + user + \"/cart\").set({});\n      navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.payButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Confirmar\")))));\n}\nexport function CartScreen(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cart = _useState4[0],\n      setCart = _useState4[1];\n\n  var user = store.getState().cartReducer.user;\n  var dispatch = useDispatch();\n  getCart(user, setCart);\n  useEffect(function () {\n    setTimeout(function () {\n      return getCart(user, setCart);\n    }, 1000);\n    if (cart == null) setTimeout(function () {\n      return setCart({});\n    }, 1000);\n  }, [cart]);\n\n  var getTotal = function getTotal() {\n    if (cart == null) return 0;\n    var res = 0;\n\n    for (var _i = 0, _Object$keys = Object.keys(cart); _i < _Object$keys.length; _i++) {\n      var prato = _Object$keys[_i];\n      res += cart[prato].Preco;\n    }\n\n    return res;\n  };\n\n  if (cart == null) return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Pre\\xE7o total: \", getTotal(), \"\\u20AC\"), React.createElement(TouchableOpacity, {\n    style: styles.payButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.payButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Pagar\")));\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, Object.keys(cart).map(function (prato) {\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      style: styles.button,\n      key: prato,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: getImageByName(cart[prato].image),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    })), React.createElement(View, {\n      style: styles.containerColumn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.restaurantesOffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, cart[prato].Name), React.createElement(Text, {\n      style: styles.foodText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, \"Op\\xE7\\xF5es : \", cart[prato].Opcoes, \"\\n\", \"Pre\\xE7o : \", cart[prato].Preco, \" \\u20AC\")), React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      activeOpacity: 0.3,\n      style: styles.delButton,\n      onPress: function onPress() {\n        db.ref(\"Users/\" + user + \"/cart/\" + prato).remove();\n        db.ref(\"Users/\" + user + \"/cart\").once('value').then(function (res) {\n          setCart(res.val());\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, React.createElement(Icon, {\n      name: \"delete\",\n      size: 25,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }))));\n  })), React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Pre\\xE7o total: \", getTotal(), \"\\u20AC\"), React.createElement(TouchableOpacity, {\n    style: styles.payButtonContainer,\n    onPress: function onPress() {\n      return navigation.push(\"Pedido\", {\n        cart: cart,\n        user: user\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.payButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Pagar\")));\n}\nvar Stack = createStackNavigator();\n\nfunction getCart(user, setCart) {\n  db.ref(\"Users/\" + user + \"/cart\").once('value').then(function (res) {\n    setCart(res.val());\n  });\n}\n\nexport default function Cart(route) {\n  return React.createElement(Stack.Navigator, {\n    initialroute: 'Carrinho',\n    screenOptions: {\n      headerTitleAlign: 'center',\n      headerStyle: {\n        backgroundColor: 'darkcyan'\n      },\n      headerTintColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Carrinho\",\n    component: CartScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Pedido\",\n    component: PedidoScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar getImageByName = function getImageByName(imageName) {\n  var img = images[imageName];\n  if (img != null) return img;\n  return images[\"default\"];\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cartList: state.cartReducer.cart\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    add: function add(prato) {\n      return dispatch({\n        type: \"addPrato\",\n        prato: prato\n      });\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'darkcyan',\n    alignItems: 'center',\n    flex: 1\n  },\n  containerRow: {\n    flexDirection: 'row'\n  },\n  containerColumn: {\n    paddingLeft: 10,\n    paddingBottom: 10,\n    flexDirection: 'column'\n  },\n  loginContainer: {\n    backgroundColor: 'darkcyan',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  title: {\n    borderTopWidth: 100,\n    borderTopColor: 'darkcyan',\n    fontSize: 40,\n    fontWeight: 'bold',\n    color: 'cornsilk'\n  },\n  inputView: {\n    borderBottomWidth: 10,\n    borderBottomColor: 'darkcyan'\n  },\n  input: {\n    backgroundColor: 'darkgray',\n    padding: 15,\n    borderRadius: 5\n  },\n  restaurantesOffer: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    color: 'black'\n  },\n  foodText: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  button: {\n    padding: 7,\n    backgroundColor: \"#DDDDDD\"\n  },\n  delButton: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  image: {\n    width: 150,\n    height: 100\n  },\n  payButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  payButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  }\n});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppCliente/Cart.js"],"names":["React","useState","useEffect","useSelector","useDispatch","createStackNavigator","db","images","store","imgQuichVeg","require","Icon","imgCremeEspi","imgSaladaQSerra","PedidoScreen","route","navigation","morada","setMorada","cart","params","user","restaurante","styles","container","title","containerColumn","inputView","fontSize","fontWeight","textAlign","color","Object","keys","map","prato","Restaurante","Id","paddingHorizontal","Name","input","containerRow","payButtonContainer","ref","push","set","goBack","payButtonText","CartScreen","setCart","getState","cartReducer","dispatch","getCart","setTimeout","getTotal","res","Preco","restaurantesOffer","button","image","getImageByName","foodText","Opcoes","delButton","remove","once","then","val","Stack","Cart","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","imageName","img","mapStateToProps","state","cartList","mapDispatchToProps","add","type","StyleSheet","create","alignItems","flex","flexDirection","paddingLeft","paddingBottom","loginContainer","justifyContent","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","padding","borderRadius","alignSelf","width","height","elevation","paddingVertical","textTransform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { db, images, store } from '../../App';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight, TouchableOpacity, TextInput } from 'react-native';\r\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\r\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\r\n\r\n\r\nexport function PedidoScreen({ route, navigation }) {\r\n    const [morada, setMorada] = useState(\"\");\r\n    let cart = route.params.cart;\r\n    let user = route.params.user;\r\n    let restaurante = \"\";\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Nutrilink</Text>\r\n            <View style={styles.containerColumn}>\r\n                <View style={styles.inputView}>\r\n                    <Text style={{\r\n                        fontSize: 15,\r\n                        fontWeight: 'bold',\r\n                        textAlign: 'left',\r\n                        color: \"white\"\r\n                    }}>Pratos:</Text>\r\n                    {\r\n                        Object.keys(cart).map((prato) => {\r\n                            restaurante = cart[prato].Restaurante;\r\n                            return (<View key={cart[prato].Id}><Text style={{color: \"white\", paddingHorizontal: 10 }}>{cart[prato].Name}</Text></View>);\r\n                        })\r\n                    }</View>\r\n                <View style={styles.inputView}>\r\n                <Text style={{\r\n                        fontSize: 15,\r\n                        fontWeight: 'bold',\r\n                        textAlign: 'left',\r\n                        color: \"white\"\r\n                    }}>Restaurante:</Text>\r\n                    <Text style={{color: \"white\", paddingHorizontal: 10 }}>{restaurante}</Text>\r\n                </View>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Morada' style={styles.input} onChangeText={morada => setMorada(morada)} />\r\n                </View>\r\n                <View style={styles.containerRow}>\r\n                    <TouchableOpacity style={styles.payButtonContainer} onPress={() => {\r\n                        db.ref(\"restaurantes/\" + restaurante + \"/pedidos\").push({\r\n                            \"Id\": \"cart\" + morada,\r\n                            \"Pratos\" : cart,\r\n                            \"Status\" : \"ordered\",\r\n                            \"Morada\" : morada\r\n\r\n                        });\r\n                        db.ref(\"Users/\" + user + \"/cart\").set({});\r\n                        navigation.goBack();\r\n                    }}>\r\n                        <Text style={styles.payButtonText}>Confirmar</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport function CartScreen({ navigation }) {\r\n    const [cart, setCart] = useState({});\r\n    let user = store.getState().cartReducer.user;\r\n    const dispatch = useDispatch();\r\n    getCart(user, setCart);\r\n    useEffect(() => {\r\n        setTimeout(() => getCart(user, setCart), 1000);\r\n        if (cart == null) setTimeout(() => setCart({}), 1000);\r\n\r\n    }, [cart])\r\n    const getTotal = () => {\r\n        if (cart == null) return 0;\r\n        let res = 0;\r\n        for (let prato of Object.keys(cart)) {\r\n            res += cart[prato].Preco;\r\n        }\r\n        return res;\r\n    }\r\n    if (cart == null) return (\r\n        <View>\r\n            <Text style={styles.restaurantesOffer}>Preço total: {getTotal()}€</Text>\r\n            <TouchableOpacity style={styles.payButtonContainer}>\r\n                <Text style={styles.payButtonText}>Pagar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n    return (\r\n        <View>\r\n            <ScrollView>{\r\n                Object.keys(cart).map(prato => {\r\n                    return (\r\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} style={styles.button} key={prato} >\r\n                            <View style={styles.containerRow}>\r\n                                <View style={styles.containerRow}>\r\n                                    <Image style={styles.image} source={getImageByName(cart[prato].image)} />\r\n                                </View>\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{cart[prato].Name}</Text>\r\n                                    <Text style={styles.foodText}>Opções : {cart[prato].Opcoes}\r\n                                        {\"\\n\"}\r\n                                Preço : {cart[prato].Preco} €</Text>\r\n                                </View>\r\n                                <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.delButton} onPress={() => {\r\n                                    db.ref(\"Users/\" + user + \"/cart/\" + prato).remove();\r\n                                    db.ref(\"Users/\" + user + \"/cart\").once('value').then(res => { setCart(res.val()) });\r\n\r\n                                }}>\r\n                                    <Icon name=\"delete\" size={25} />\r\n                                </TouchableHighlight>\r\n                            </View>\r\n\r\n                        </TouchableHighlight>\r\n\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n            <Text style={styles.restaurantesOffer}>Preço total: {getTotal()}€</Text>\r\n            <TouchableOpacity style={styles.payButtonContainer} onPress={() => navigation.push(\"Pedido\", { cart, user })}>\r\n                <Text style={styles.payButtonText}>Pagar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction getCart(user, setCart) {\r\n    db.ref(\"Users/\" + user + \"/cart\").once('value').then(res => { setCart(res.val()) });\r\n}\r\n\r\nexport default function Cart(route) {\r\n    return (\r\n        <Stack.Navigator initialroute={'Carrinho'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Carrinho\" component={CartScreen} />\r\n            <Stack.Screen name=\"Pedido\" component={PedidoScreen} />\r\n        </Stack.Navigator>);\r\n\r\n}\r\n\r\n\r\nconst getImageByName = (imageName) => {\r\n    let img = images[imageName]\r\n    if (img != null) return img\r\n    return images[\"default\"]\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => { return { cartList: state.cartReducer.cart } };\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        add: (prato) => dispatch({ type: \"addPrato\", prato: prato })\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        flex: 1\r\n\r\n    },\r\n    containerRow: {\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    loginContainer: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: 1\r\n    },\r\n    title: {\r\n        borderTopWidth: 100,\r\n        borderTopColor: 'darkcyan',\r\n        fontSize: 40,\r\n        fontWeight: 'bold',\r\n        color: 'cornsilk'\r\n    },\r\n    inputView: {\r\n        borderBottomWidth: 10,\r\n        borderBottomColor: 'darkcyan'\r\n    },\r\n    input: {\r\n        backgroundColor: 'darkgray',\r\n        padding: 15,\r\n        borderRadius: 5,\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n        backgroundColor: \"#DDDDDD\",\r\n    },\r\n    delButton: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center'\r\n\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    },\r\n    payButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12\r\n    },\r\n    payButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}