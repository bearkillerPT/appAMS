{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\appAmsree\\\\screens\\\\AppCliente\\\\RestauranteMenu.js\";\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useDispatch } from 'react-redux';\nimport { addPrato } from \"../../assets/cartState\";\nimport { db, images, store } from \"../../App\";\nexport default function RestauranteMenu(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cart = _useState2[0],\n      setCart = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pratos = _useState4[0],\n      setPratos = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      restaurants = _useState6[0],\n      setRestaurants = _useState6[1];\n\n  useEffect(db.ref(\"restaurantes/\").once('value').then(function (res) {\n    return setRestaurants(res.val());\n  }), db.ref(\"restaurantes/\" + restauranteName + \"/Pratos\").once('value').then(function (res) {\n    return setPratos(res.val());\n  }), []);\n  var restauranteName = route.params.restaurante[\"Name\"];\n  getCart(user, setCart);\n  var user = store.getState().cartReducer.user;\n  var dispatch = useDispatch();\n  if (pratos == null) return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 39\n    }\n  }, \"Sorry\"));\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Pratos Dispon\\xEDveis:\"), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, Object.keys(pratos).map(function (prato) {\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      activeOpacity: 0.3,\n      style: styles.button,\n      key: pratos[prato].Id,\n      onPress: function onPress() {\n        if (checkSameRestaurant(restauranteName, pratos)) db.ref('Users/' + user + \"/cart\").push(pratos[prato]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: getImageByName(pratos[prato].image),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    }), React.createElement(View, {\n      style: styles.containerColumn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.restaurantesOffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 37\n      }\n    }, pratos[prato].Name), React.createElement(Text, {\n      style: styles.foodText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 37\n      }\n    }, \"Op\\xE7\\xF5es : \", pratos[prato].Opcoes, \"\\n\", \"Pre\\xE7o : \", pratos[prato].Preco, \" \\u20AC\"))));\n  })));\n}\n\nvar getImageByName = function getImageByName(imageName) {\n  var img = images[imageName];\n  if (img != null) return img;\n  return images[\"default\"];\n};\n\nfunction getCart(user, setCart) {\n  db.ref(\"Users/\" + user + \"/cart\").once('value').then(function (res) {\n    setCart(res.val());\n  });\n}\n\nfunction checkSameRestaurant(restauranteOfPratoIn, pratos) {\n  if (cart == null || Object.length(cart) == 0) return true;\n  console.log(restauranteOfPratoIn);\n\n  for (var pratoC in Object.keys(cart)) {\n    var res = void 0;\n\n    for (var restaurante in Object.keys(restaurants)) {\n      for (var prato in Object.keys(restaurants[restaurante].Prato)) {\n        if (pratoC == restaurants[restaurante].Prato[prato]) {\n          console.log(restaurants[restaurante]);\n          if (restaurants[restaurante] != restauranteOfPratoIn) return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n\nvar styles = StyleSheet.create({\n  containerRow: {\n    paddingBottom: 10,\n    flexDirection: 'row'\n  },\n  containerColumn: {\n    paddingLeft: 10,\n    paddingBottom: 10,\n    flexDirection: 'column'\n  },\n  restaurantesOffer: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    color: 'black'\n  },\n  foodText: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  button: {\n    padding: 7\n  },\n  image: {\n    width: 150,\n    height: 100\n  }\n});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppCliente/RestauranteMenu.js"],"names":["React","useState","useEffect","useContext","useCallback","useDispatch","addPrato","db","images","store","RestauranteMenu","route","cart","setCart","pratos","setPratos","restaurants","setRestaurants","ref","once","then","res","val","restauranteName","params","restaurante","getCart","user","getState","cartReducer","dispatch","flex","styles","restaurantesOffer","Object","keys","map","prato","button","Id","checkSameRestaurant","push","containerRow","image","getImageByName","containerColumn","Name","foodText","Opcoes","Preco","imageName","img","restauranteOfPratoIn","length","console","log","pratoC","Prato","StyleSheet","create","paddingBottom","flexDirection","paddingLeft","fontSize","fontWeight","textAlign","color","padding","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { addPrato } from '../../assets/cartState';\nimport { db, images, store } from '../../App';\n\nexport default function RestauranteMenu({ route }) {\n    const [cart, setCart] = useState([]);\n    const [pratos, setPratos] = useState({});\n\n    const [restaurants, setRestaurants] = useState({});\n    useEffect(\n        db.ref(\"restaurantes/\").once('value').then(res => setRestaurants(res.val())),\n        db.ref(\"restaurantes/\" + restauranteName + \"/Pratos\").once('value').then(res => setPratos(res.val()))\n    ,[]);\n    const restauranteName = route.params.restaurante[\"Name\"];\n    getCart(user, setCart);\n    let user = store.getState().cartReducer.user;\n    const dispatch = useDispatch();\n    if (pratos == null) return (<View><Text>Sorry</Text></View>);\n    return (\n        <View style={{ flex: 1 }}>\n            <Text style={styles.restaurantesOffer}>Pratos Disponíveis:</Text>\n            <ScrollView>{\n                Object.keys(pratos).map(prato => {\n                    return (\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={pratos[prato].Id} onPress={() => {\n                            if (checkSameRestaurant(restauranteName, pratos))\n                                db.ref('Users/' + user + \"/cart\").push(pratos[prato]);\n                        }}>\n                            <View style={styles.containerRow}>\n                                <Image style={styles.image} source={getImageByName(pratos[prato].image)} />\n                                <View style={styles.containerColumn}>\n                                    <Text style={styles.restaurantesOffer}>{pratos[prato].Name}</Text>\n                                    <Text style={styles.foodText}>Opções : {pratos[prato].Opcoes}\n                                        {\"\\n\"}\n                            Preço : {pratos[prato].Preco} €</Text>\n                                </View>\n                            </View>\n                        </TouchableHighlight>\n                    );\n                })\n            }</ScrollView>\n        </View>\n\n    );\n}\n\nconst getImageByName = (imageName) => {\n    let img = images[imageName]\n    if (img != null) return img\n    return images[\"default\"]\n}\n\nfunction getCart(user, setCart) {\n    db.ref(\"Users/\" + user + \"/cart\").once('value').then(res => { setCart(res.val()) });\n}\n\nfunction checkSameRestaurant(restauranteOfPratoIn, pratos) {\n\n    if (cart == null || Object.length(cart) == 0) return true;\n    console.log(restauranteOfPratoIn)\n    for (let pratoC in Object.keys(cart)) {\n        let res\n        for (let restaurante in Object.keys(restaurants)) {\n            for (let prato in Object.keys(restaurants[restaurante].Prato))\n                if (pratoC == restaurants[restaurante].Prato[prato]) {\n                    console.log(restaurants[restaurante]);\n                    if (restaurants[restaurante] != restauranteOfPratoIn)\n                        return false;\n                }\n        }\n    }\n    return true;\n}\n\nconst styles = StyleSheet.create({\n    containerRow: {\n        paddingBottom: 10,\n        flexDirection: 'row'\n    },\n    containerColumn: {\n        paddingLeft: 10,\n        paddingBottom: 10,\n        flexDirection: 'column'\n    },\n    restaurantesOffer: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'left',\n        color: 'black'\n    },\n    foodText: {\n        fontSize: 12,\n        textAlign: 'left',\n\n    },\n    button: {\n        padding: 7,\n    },\n    image: {\n        width: 150,\n        height: 100,\n    }\n});"]},"metadata":{},"sourceType":"module"}