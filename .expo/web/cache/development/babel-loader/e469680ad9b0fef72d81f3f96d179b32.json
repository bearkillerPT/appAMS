{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\appAmsree\\\\screens\\\\AppRestaurante\\\\Orders.js\";\nimport React, { useState } from 'react';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Icon2 from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { store, db, images } from \"../../App\";\nexport default function Orders(_ref) {\n  var route = _ref.route;\n  var user = store.getState().cartReducer.user;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurante = _useState2[0],\n      setRestaurante = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      restaurants = _useState4[0],\n      setRestaurants = _useState4[1];\n\n  getRestaurante(user, setRestaurante, setRestaurants);\n  if (restaurante == \"\" || Object.keys(restaurants).length == 0) return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 76\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 82\n    }\n  }, \"Sorry\"));\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Pratos Pedidos:\"), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, restaurants[restaurante].pedidos.forEach(function (pedido) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, pedido.Morada);\n  })));\n}\n\nfunction getRestaurante(user, setRestaurante, setRestaurants) {\n  return _regeneratorRuntime.async(function getRestaurante$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(db.ref(\"Users/\" + user).once('value').then(function (res) {\n            return setRestaurante(res.val()[\"restaurante\"]);\n          }));\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(db.ref(\"restaurantes\").once('value').then(function (res) {\n            return setRestaurants(res.val());\n          }));\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar styles = StyleSheet.create({\n  containerRow: {\n    paddingBottom: 10,\n    flexDirection: 'row'\n  },\n  containerColumn: {\n    paddingLeft: 10,\n    paddingBottom: 10,\n    flexDirection: 'column'\n  },\n  restaurantesOffer: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    color: 'black'\n  },\n  foodText: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  button: {\n    padding: 7\n  },\n  image: {\n    width: 150,\n    height: 100\n  }\n});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppRestaurante/Orders.js"],"names":["React","useState","Icon","Icon2","store","db","images","Orders","route","user","getState","cartReducer","restaurante","setRestaurante","restaurants","setRestaurants","getRestaurante","Object","keys","length","styles","restaurantesOffer","pedidos","forEach","pedido","Morada","ref","once","then","res","val","StyleSheet","create","containerRow","paddingBottom","flexDirection","containerColumn","paddingLeft","fontSize","fontWeight","textAlign","color","foodText","button","padding","image","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport Icon2 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\r\nimport { store, db, images } from '../../App';\r\n\r\nexport default function Orders({ route }) {\r\n    let user = store.getState().cartReducer.user;\r\n    const [restaurante, setRestaurante] = useState(\"\");\r\n    const [restaurants, setRestaurants] = useState({});\r\n    getRestaurante(user, setRestaurante, setRestaurants);\r\n    if (restaurante == \"\" || Object.keys(restaurants).length == 0) return (<View><Text>Sorry</Text></View>);\r\n    return (\r\n        <View>\r\n            <Text style={styles.restaurantesOffer}>Pratos Pedidos:</Text>\r\n            <ScrollView>{\r\n                restaurants[restaurante].pedidos.forEach(pedido => {\r\n                    return (\r\n                        <Text>{pedido.Morada}</Text>\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\nasync function getRestaurante(user, setRestaurante, setRestaurants) {\r\n    await db.ref(\"Users/\" + user).once('value').then(res => setRestaurante(res.val()[\"restaurante\"]));\r\n    await db.ref(\"restaurantes\").once('value').then(res => setRestaurants(res.val()));\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        paddingBottom: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}