{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\appAmsree\\\\screens\\\\AppCliente\\\\Cart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { db, images, store } from \"../../App\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar imgQuichVeg = require(\"../../assets/quicheVegsGluten.jpg\");\n\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nvar imgCremeEspi = require(\"../../assets/cremedeespinafres.jpg\");\n\nvar imgSaladaQSerra = require(\"../../assets/saladaqueijoserra.jpg\");\n\nexport function CartScreen(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      cart = _useState2[0],\n      setCart = _useState2[1];\n\n  var user = store.getState().cartReducer.user;\n  var dispatch = useDispatch();\n  console.log(\"hey\");\n  useEffect(function () {\n    getCart(user, setCart);\n    if (cart == null) setTimeout(function () {\n      return setCart({});\n    }, 2000);\n  }, [cart]);\n\n  var getTotal = function getTotal() {\n    if (cart == null) return 0;\n    var res = 0;\n\n    for (var _i = 0, _Object$keys = Object.keys(cart); _i < _Object$keys.length; _i++) {\n      var prato = _Object$keys[_i];\n      res += cart[prato].Preco;\n    }\n\n    return res;\n  };\n\n  console.log(cart);\n  if (cart == null) return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Pre\\xE7o total: \", getTotal(), \"\\u20AC\"), React.createElement(TouchableOpacity, {\n    style: styles.payButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.payButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Pagar\")));\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, Object.keys(cart).map(function (prato) {\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      style: styles.button,\n      key: prato,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: getImageByName(cart[prato].image),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    })), React.createElement(View, {\n      style: styles.containerColumn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.restaurantesOffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    }, cart[prato].Name), React.createElement(Text, {\n      style: styles.foodText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 37\n      }\n    }, \"Op\\xE7\\xF5es : \", cart[prato].Opcoes, \"\\n\", \"Pre\\xE7o : \", cart[prato].Preco, \" \\u20AC\")), React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      activeOpacity: 0.3,\n      style: styles.delButton,\n      onPress: function onPress() {\n        db.ref(\"Users/\" + user + \"/cart/\" + prato).remove();\n        db.ref(\"Users/\" + user + \"/cart\").once('value').then(function (res) {\n          setCart(res.val());\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, React.createElement(Icon, {\n      name: \"delete\",\n      size: 25,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }\n    }))));\n  })), React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Pre\\xE7o total: \", getTotal(), \"\\u20AC\"), React.createElement(TouchableOpacity, {\n    style: styles.payButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.payButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Pagar\")));\n}\nvar Stack = createStackNavigator();\n\nfunction getCart(user, setCart) {\n  db.ref(\"Users/\" + user + \"/cart\").once('value').then(function (res) {\n    setCart(res.val());\n  });\n}\n\nexport default function Cart(route) {\n  return React.createElement(Stack.Navigator, {\n    initialroute: 'Carrinho',\n    screenOptions: {\n      headerTitleAlign: 'center',\n      headerStyle: {\n        backgroundColor: 'darkcyan'\n      },\n      headerTintColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Carrinho\",\n    component: CartScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar getImageByName = function getImageByName(imageName) {\n  var img = images[imageName];\n  if (img != null) return img;\n  return images[\"default\"];\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cartList: state.cartReducer.cart\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    add: function add(prato) {\n      return dispatch({\n        type: \"addPrato\",\n        prato: prato\n      });\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  containerRow: {\n    flexDirection: 'row'\n  },\n  containerColumn: {\n    paddingLeft: 10,\n    paddingBottom: 10,\n    flexDirection: 'column'\n  },\n  restaurantesOffer: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    color: 'black'\n  },\n  foodText: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  button: {\n    padding: 7,\n    backgroundColor: \"#DDDDDD\"\n  },\n  delButton: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  image: {\n    width: 150,\n    height: 100\n  },\n  payButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  payButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  }\n});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppCliente/Cart.js"],"names":["React","useState","useEffect","useSelector","useDispatch","createStackNavigator","db","images","store","imgQuichVeg","require","Icon","imgCremeEspi","imgSaladaQSerra","CartScreen","props","cart","setCart","user","getState","cartReducer","dispatch","console","log","getCart","setTimeout","getTotal","res","Object","keys","prato","Preco","styles","restaurantesOffer","payButtonContainer","payButtonText","map","button","containerRow","image","getImageByName","containerColumn","Name","foodText","Opcoes","delButton","ref","remove","once","then","val","Stack","Cart","route","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","imageName","img","mapStateToProps","state","cartList","mapDispatchToProps","add","type","StyleSheet","create","flexDirection","paddingLeft","paddingBottom","fontSize","fontWeight","textAlign","color","padding","flex","justifyContent","alignSelf","width","height","elevation","borderRadius","paddingVertical","paddingHorizontal","textTransform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { db, images, store } from '../../App';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight, TouchableOpacity } from 'react-native';\r\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\r\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\r\n\r\n\r\nexport function CartScreen(props) {\r\n    const [cart, setCart] = useState({});\r\n    let user = store.getState().cartReducer.user;\r\n    const dispatch = useDispatch();\r\n    console.log(\"hey\")\r\n    useEffect(() => {\r\n        getCart(user, setCart);\r\n        if(cart == null) setTimeout(()=>setCart({}), 2000);\r\n    }, [cart])\r\n    const getTotal = () => {\r\n        if (cart == null) return 0;\r\n        let res = 0;\r\n        for (let prato of Object.keys(cart)) {\r\n            res += cart[prato].Preco;\r\n        }\r\n        return res;\r\n    }\r\n    console.log(cart)\r\n    if (cart == null) return (\r\n        <View>\r\n            <Text style={styles.restaurantesOffer}>Preço total: {getTotal()}€</Text>\r\n            <TouchableOpacity style={styles.payButtonContainer}>\r\n                <Text style={styles.payButtonText}>Pagar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n    return (\r\n        <View>\r\n            <ScrollView>{\r\n                Object.keys(cart).map(prato => {\r\n                    return (\r\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} style={styles.button} key={prato} >\r\n                            <View style={styles.containerRow}>\r\n                                <View style={styles.containerRow}>\r\n                                    <Image style={styles.image} source={getImageByName(cart[prato].image)} />\r\n                                </View>\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{cart[prato].Name}</Text>\r\n                                    <Text style={styles.foodText}>Opções : {cart[prato].Opcoes}\r\n                                        {\"\\n\"}\r\n                                Preço : {cart[prato].Preco} €</Text>\r\n                                </View>\r\n                                <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.delButton} onPress={() => {\r\n                                    db.ref(\"Users/\" + user + \"/cart/\" + prato).remove();\r\n                                    db.ref(\"Users/\" + user + \"/cart\").once('value').then(res => { setCart(res.val()) });\r\n\r\n                                }}>\r\n                                    <Icon name=\"delete\" size={25} />\r\n                                </TouchableHighlight>\r\n                            </View>\r\n\r\n                        </TouchableHighlight>\r\n\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n            <Text style={styles.restaurantesOffer}>Preço total: {getTotal()}€</Text>\r\n            <TouchableOpacity style={styles.payButtonContainer}>\r\n                <Text style={styles.payButtonText}>Pagar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction getCart(user, setCart) {\r\n    db.ref(\"Users/\" + user + \"/cart\").once('value').then(res => { setCart(res.val()) });\r\n}\r\n\r\nexport default function Cart(route) {\r\n    return (\r\n        <Stack.Navigator initialroute={'Carrinho'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Carrinho\" component={CartScreen} />\r\n        </Stack.Navigator>);\r\n\r\n}\r\n\r\n\r\nconst getImageByName = (imageName) => {\r\n    let img = images[imageName]\r\n    if (img != null) return img\r\n    return images[\"default\"]\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => { return { cartList: state.cartReducer.cart } };\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        add: (prato) => dispatch({ type: \"addPrato\", prato: prato })\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n        backgroundColor: \"#DDDDDD\",\r\n    },\r\n    delButton: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center'\r\n\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    },\r\n    payButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12\r\n    },\r\n    payButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}