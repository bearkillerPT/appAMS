{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\appAmsree\\\\screens\\\\AppRestaurante\\\\AppRestaurante.js\";\nimport React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Icon1 from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport RestaurantDishes from \"./PratosStack\";\nimport OrdersStack from \"./OrdersStack\";\nimport { Restart } from 'fiction-expo-restart';\nimport { db } from \"../../App\";\nimport { setLogged } from \"../../assets/cartState\";\nimport { useDispatch } from 'react-redux';\n\nvar imgVegifruit = require(\"../../assets/vegifruit.png\");\n\nvar imgGreenCity = require(\"../../assets/greencity.png\");\n\nvar imgSaladasmais = require(\"../../assets/saladasmais.jpg\");\n\nvar imgQuichVeg = require(\"../../assets/quicheVegsGluten.jpg\");\n\nvar imgCremeEspi = require(\"../../assets/cremedeespinafres.jpg\");\n\nvar imgSaladaQSerra = require(\"../../assets/saladaqueijoserra.jpg\");\n\nvar imgSandesBase = require(\"../../assets/sandesBase.jpg\");\n\nvar imgPratoCarne = require(\"../../assets/pratoCarne.jpg\");\n\nvar imgPratoPeixe = require(\"../../assets/pratoPeixe.jpg\");\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var dispatch = useDispatch();\n  dispatch(setLogged(false));\n  return React.createElement(NavigationContainer, {\n    independent: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    initialRouteName: \"Restaurante\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Restaurante') {\n            return React.createElement(Icon, {\n              name: \"ios-restaurant\",\n              size: size,\n              color: color,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 20\n              }\n            });\n          } else if (route.name === \"Pedidos\") return React.createElement(Icon1, {\n            name: \"food\",\n            size: size,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 20\n            }\n          });else return React.createElement(Icon1, {\n            name: \"logout\",\n            size: size,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Restaurante\",\n    component: RestaurantDishes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Pedidos\",\n    component: OrdersStack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Logout\",\n    component: Logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n}\nexport function Logout(_ref3) {\n  var navigation = _ref3.navigation;\n  Restart();\n  return React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppRestaurante/AppRestaurante.js"],"names":["React","useState","createBottomTabNavigator","NavigationContainer","Icon1","Icon","RestaurantDishes","OrdersStack","Restart","db","setLogged","useDispatch","imgVegifruit","require","imgGreenCity","imgSaladasmais","imgQuichVeg","imgCremeEspi","imgSaladaQSerra","imgSandesBase","imgPratoCarne","imgPratoPeixe","Tab","App","dispatch","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","Logout","navigation"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Icon1 from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport RestaurantDishes from './PratosStack';\nimport OrdersStack from './OrdersStack';\nimport {Restart} from 'fiction-expo-restart';\nimport {db} from '../../App';\nimport { setLogged } from '../../assets/cartState';\nimport { useDispatch } from 'react-redux';\nvar imgVegifruit = require('../../assets/vegifruit.png');\nvar imgGreenCity = require('../../assets/greencity.png');\nvar imgSaladasmais = require('../../assets/saladasmais.jpg');\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\nvar imgSandesBase = require('../../assets/sandesBase.jpg');\nvar imgPratoCarne = require('../../assets/pratoCarne.jpg');\nvar imgPratoPeixe = require('../../assets/pratoPeixe.jpg');\n\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  const dispatch = useDispatch();\n  dispatch(setLogged(false));\n  return (\n    <NavigationContainer independent={true}>\n      <Tab.Navigator initialRouteName='Restaurante' screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          if (route.name === 'Restaurante') {\n            return <Icon name={\"ios-restaurant\"} size={size} color={color} />;\n          }\n          else if (route.name === \"Pedidos\")\n            return <Icon1 name={\"food\"} size={size} color={color} />;\n          else \n            return <Icon1 name={\"logout\"} size={size} color={color} />;\n        },\n      })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}>\n        <Tab.Screen name=\"Restaurante\" component={RestaurantDishes}/>\n        <Tab.Screen name=\"Pedidos\" component={OrdersStack}/>\n        <Tab.Screen name=\"Logout\" component={Logout}/>\n      </Tab.Navigator>\n    </NavigationContainer>);\n}\n\n\nexport function Logout({navigation}) {\n\n  Restart();\n  return(<></>);\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}