{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\appAmsree\\\\screens\\\\AppRestaurante\\\\Pratos.js\";\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { store, db } from \"../../App\";\nexport default function RestauranteMenu(_ref) {\n  var route = _ref.route;\n  var user = store.getState().cartReducer.user;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurante = _useState2[0],\n      setRestaurante = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      restaurants = _useState4[0],\n      setRestaurants = _useState4[1];\n\n  getRestaurante(user, setRestaurante, setRestaurants);\n  console.log(restaurante);\n  console.log(restaurants);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Pratos Disponibilizados:\"), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, Object.keys(restaurants[\"restaurante\"].Pratos).map(function (prato) {\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      activeOpacity: 0.3,\n      style: styles.button,\n      key: restaurants[restaurante].Pratos[prato].id,\n      onPress: function onPress() {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 29\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: restaurants[restaurante].Pratos[prato].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 33\n      }\n    }), React.createElement(View, {\n      style: styles.containerColumn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.restaurantesOffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 37\n      }\n    }, prato), React.createElement(Text, {\n      style: styles.foodText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 37\n      }\n    }, \"Op\\xE7\\xF5es : \", restaurants[restaurante].Pratos[prato].Opçoes, \"\\n\", \"Pre\\xE7o : \", restaurants[restaurante].Pratos[prato].Preço, \" \\u20AC\"))));\n  })));\n}\n\nfunction getRestaurante(user, setRestaurante, setRestaurants) {\n  return _regeneratorRuntime.async(function getRestaurante$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(db.ref(\"Users/\" + user).once('value').then(function (res) {\n            return setRestaurante(res.val());\n          }));\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(db.ref(\"restaurantes\").once('value').then(function (res) {\n            return setRestaurants(res.val());\n          }));\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar styles = StyleSheet.create({\n  containerRow: {\n    paddingBottom: 10,\n    flexDirection: 'row'\n  },\n  containerColumn: {\n    paddingLeft: 10,\n    paddingBottom: 10,\n    flexDirection: 'column'\n  },\n  restaurantesOffer: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    color: 'black'\n  },\n  foodText: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  button: {\n    padding: 7\n  },\n  image: {\n    width: 150,\n    height: 100\n  }\n});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppRestaurante/Pratos.js"],"names":["React","useState","useEffect","useContext","useCallback","store","db","RestauranteMenu","route","user","getState","cartReducer","restaurante","setRestaurante","restaurants","setRestaurants","getRestaurante","console","log","styles","restaurantesOffer","Object","keys","Pratos","map","prato","button","id","containerRow","image","containerColumn","foodText","Opçoes","Preço","ref","once","then","res","val","StyleSheet","create","paddingBottom","flexDirection","paddingLeft","fontSize","fontWeight","textAlign","color","padding","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\nimport {store, db} from '../../App';\nexport default function RestauranteMenu({route}) {\n    //<Image so(urce={restaurante.image} style={styles.image}/>\n    let user = store.getState().cartReducer.user; \n    const [restaurante, setRestaurante] = useState({});\n    const [restaurants, setRestaurants] = useState({});\n    getRestaurante(user, setRestaurante,  setRestaurants);\n    console.log(restaurante)\n    console.log(restaurants)\n    return (\n        <View>\n            <Text style={styles.restaurantesOffer}>Pratos Disponibilizados:</Text>\n            <ScrollView>{\n                Object.keys(restaurants[\"restaurante\"].Pratos).map(prato => {\n                    return (\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={restaurants[restaurante].Pratos[prato].id} onPress={() => {}}>\n                            <View style={styles.containerRow}>\n                                <Image style={styles.image} source={restaurants[restaurante].Pratos[prato].image} />\n                                <View style={styles.containerColumn}>\n                                    <Text style={styles.restaurantesOffer}>{prato}</Text>\n                                    <Text style={styles.foodText}>Opções : {restaurants[restaurante].Pratos[prato].Opçoes}\n                                        {\"\\n\"}\n                            Preço : {restaurants[restaurante].Pratos[prato].Preço} €</Text>\n                                </View>\n                            </View>\n                        </TouchableHighlight>\n                    );\n                })\n            }</ScrollView>\n        </View>\n\n    );\n}\n\nasync function getRestaurante(user, setRestaurante,  setRestaurants) {\n    await db.ref(\"Users/\" + user  ).once('value').then(res => setRestaurante(res.val()));\n    await db.ref(\"restaurantes\").once('value').then(res => setRestaurants(res.val()));\n}\n\nconst styles = StyleSheet.create({\n    containerRow: {\n        paddingBottom: 10,\n        flexDirection: 'row'\n    },\n    containerColumn: {\n        paddingLeft: 10,\n        paddingBottom: 10,\n        flexDirection: 'column'\n    },\n    restaurantesOffer: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'left',\n        color: 'black'\n    },\n    foodText: {\n        fontSize: 12,\n        textAlign: 'left',\n\n    },\n    button: {\n        padding: 7,\n    },\n    image: {\n        width: 150,\n        height: 100,\n    }\n});"]},"metadata":{},"sourceType":"module"}