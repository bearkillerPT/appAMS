{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\appAmsree\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport ClienteApp from \"./screens/AppCliente/AppClientes\";\nimport RestauranteApp from \"./screens/AppRestaurante/AppRestaurante\";\nimport EstafetaApp from \"./screens/AppEstafeta/AppEstafeta\";\nimport { Provider } from 'react-redux';\nimport configStore from \"./Store\";\nimport { useDispatch } from 'react-redux';\nimport { setLogged } from \"./assets/cartState\";\nvar users = {\n  \"cliente\": {\n    \"type\": \"cliente\",\n    \"password\": \"cliente\"\n  },\n  \"restaurante\": {\n    \"type\": \"restaurante\",\n    \"password\": \"restaurante\",\n    \"restaurante\": \"Vegifruit\"\n  },\n  \"estafeta\": {\n    \"type\": \"estafeta\",\n    \"password\": \"estafeta\",\n    \"feedback\": [{\n      \"id\": 1,\n      \"restaurante\": \"Vegifruit\",\n      \"rating\": 5\n    }, {\n      \"id\": 2,\n      \"restaurante\": \"Saladas+\",\n      \"rating\": 4\n    }, {\n      \"id\": 3,\n      \"restaurante\": \"Green City quiches & saladas, co.\",\n      \"rating\": 4\n    }],\n    \"pedidos\": [{\n      \"id\": 1,\n      \"restaurante\": \"Saladas+\",\n      \"prato\": \"Prato do dia Peixe\",\n      \"morada\": \"Universidade de Aveiro, DECA\"\n    }, {\n      \"id\": 2,\n      \"restaurante\": \"Vegifruit\",\n      \"prato\": \"Salada de queijo da serra\",\n      \"morada\": \"Universidade de Aveiro, DETI\"\n    }, {\n      \"id\": 3,\n      \"restaurante\": \"Green City quiches & saladas, co.\",\n      \"prato\": \"Quiche especial\",\n      \"morada\": \"Universidade de Aveiro, CP\"\n    }]\n  }\n};\nvar store = configStore();\nexport default function AppWraper(route) {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(AppContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }));\n}\nvar AppTab = createStackNavigator();\n\nfunction AppContent() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isCliente = _useState4[0],\n      setIsCliente = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isRestaurante = _useState6[0],\n      setIsRestaurante = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isEstafeta = _useState8[0],\n      setIsEstafeta = _useState8[1];\n\n  var logged = store.getState();\n  logged = logged.cartReducer.isLogged;\n  return React.createElement(React.Fragment, null, logged && React.createElement(React.Fragment, null, isCliente && React.createElement(ClienteApp, {\n    setIsLogged: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }), console.log(users[user]) && isRestaurante && React.createElement(RestauranteApp, {\n    restaurante: users[user],\n    setIsLogged: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), isEstafeta && React.createElement(EstafetaApp, {\n    estafeta: users[user],\n    setIsLogged: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })), !logged && React.createElement(Login, {\n    user: user,\n    setUser: setUser,\n    setIsCliente: setIsCliente,\n    setIsRestaurante: setIsRestaurante,\n    setIsEstafeta: setIsEstafeta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation,\n      setIsLogged = _ref.setIsLogged,\n      setIsCliente = _ref.setIsCliente,\n      setIsRestaurante = _ref.setIsRestaurante,\n      setIsEstafeta = _ref.setIsEstafeta,\n      user = _ref.user,\n      setUser = _ref.setUser;\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Nutrilink\"), React.createElement(View, {\n    style: styles.loginContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Username\",\n    style: styles.input,\n    onChangeText: function onChangeText(username) {\n      return setUser(username);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Password\",\n    style: styles.input,\n    onChangeText: function onChangeText(pass) {\n      return setPassword(pass);\n    },\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.containerRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.loginButtonContainer,\n    onPress: function onPress() {\n      for (var _i = 0, _Object$keys = Object.keys(users); _i < _Object$keys.length; _i++) {\n        var typeUser = _Object$keys[_i];\n\n        if (user === typeUser) {\n          switch (users[user].type) {\n            case \"cliente\":\n              dispatch(setLogged(true));\n              setIsCliente(true);\n              break;\n\n            case \"restaurante\":\n              dispatch(setLogged(true));\n              setIsRestaurante(true);\n              break;\n\n            case \"estafeta\":\n              dispatch(setLogged(true));\n              setIsEstafeta(true);\n              break;\n\n            default:\n              break;\n          }\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.loginButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, \"       Login       \")), React.createElement(TouchableOpacity, {\n    style: styles.loginButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.loginButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, \"    Registar    \")))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'darkcyan',\n    alignItems: 'center',\n    flex: 1\n  },\n  containerRow: {\n    paddingTop: 20,\n    flexDirection: 'row'\n  },\n  loginContainer: {\n    backgroundColor: 'darkcyan',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  title: {\n    borderTopWidth: 100,\n    borderTopColor: 'darkcyan',\n    fontSize: 40,\n    fontWeight: 'bold',\n    color: 'cornsilk'\n  },\n  inputView: {\n    borderBottomWidth: 10,\n    borderBottomColor: 'darkcyan'\n  },\n  input: {\n    backgroundColor: 'darkgray',\n    padding: 15,\n    borderRadius: 5\n  },\n  loginButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 28,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  }\n});","map":{"version":3,"sources":["D:/dev/appAmsree/App.js"],"names":["React","useState","useEffect","createStackNavigator","ClienteApp","RestauranteApp","EstafetaApp","Provider","configStore","useDispatch","setLogged","users","store","AppWraper","route","AppTab","AppContent","user","setUser","isCliente","setIsCliente","isRestaurante","setIsRestaurante","isEstafeta","setIsEstafeta","logged","getState","cartReducer","isLogged","console","log","Login","navigation","setIsLogged","password","setPassword","dispatch","styles","container","title","loginContainer","inputView","input","username","pass","containerRow","loginButtonContainer","Object","keys","typeUser","type","loginButtonText","StyleSheet","create","backgroundColor","alignItems","flex","paddingTop","flexDirection","justifyContent","borderTopWidth","borderTopColor","fontSize","fontWeight","color","borderBottomWidth","borderBottomColor","padding","borderRadius","elevation","paddingVertical","paddingHorizontal","alignSelf","textTransform"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from 'react';\r\nimport { TextInput, StyleSheet, View, Text, TouchableOpacity } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport ClienteApp from './screens/AppCliente/AppClientes';\r\nimport RestauranteApp from './screens/AppRestaurante/AppRestaurante';\r\nimport EstafetaApp from './screens/AppEstafeta/AppEstafeta';\r\nimport { Provider } from 'react-redux';\r\nimport configStore from './Store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLogged } from './assets/cartState';\r\nconst users = {\r\n    \"cliente\": {\r\n        \"type\": \"cliente\",\r\n        \"password\": \"cliente\",\r\n    },\r\n    \"restaurante\": {\r\n        \"type\": \"restaurante\",\r\n        \"password\": \"restaurante\",\r\n        \"restaurante\": \"Vegifruit\"\r\n    },\r\n    \"estafeta\": {\r\n        \"type\": \"estafeta\",\r\n        \"password\": \"estafeta\",\r\n        \"feedback\": [\r\n            {\r\n                \"id\": 1,\r\n                \"restaurante\": \"Vegifruit\",\r\n                \"rating\": 5\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"restaurante\": \"Saladas+\",\r\n                \"rating\": 4\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"restaurante\": \"Green City quiches & saladas, co.\",\r\n                \"rating\": 4\r\n            },\r\n        ],\r\n        \"pedidos\": [\r\n            {\r\n                \"id\": 1,\r\n                \"restaurante\": \"Saladas+\",\r\n                \"prato\": \"Prato do dia Peixe\",\r\n                \"morada\": \"Universidade de Aveiro, DECA\"\r\n            },\r\n\r\n            {\r\n                \"id\": 2,\r\n                \"restaurante\": \"Vegifruit\",\r\n                \"prato\": \"Salada de queijo da serra\",\r\n                \"morada\": \"Universidade de Aveiro, DETI\"\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"restaurante\": \"Green City quiches & saladas, co.\",\r\n                \"prato\": \"Quiche especial\",\r\n                \"morada\": \"Universidade de Aveiro, CP\"\r\n            },\r\n        ]\r\n    },\r\n}\r\nconst store = configStore();\r\n\r\nexport default function AppWraper(route) {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppContent />\r\n        </Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst AppTab = createStackNavigator();\r\n\r\nfunction AppContent() {\r\n    const [user, setUser] = useState(\"\");\r\n    const [isCliente, setIsCliente] = useState(false);\r\n    const [isRestaurante, setIsRestaurante] = useState(false);\r\n    const [isEstafeta, setIsEstafeta] = useState(false);\r\n    let logged = store.getState();\r\n    logged = logged.cartReducer.isLogged;\r\n    return (<>\r\n        {logged &&\r\n            <>\r\n                {isCliente &&\r\n                    <ClienteApp setIsLogged />\r\n                }\r\n                {console.log(users[user]) && isRestaurante &&\r\n                    <RestauranteApp restaurante={users[user]} setIsLogged />\r\n                }\r\n                {isEstafeta &&\r\n                    <EstafetaApp estafeta={users[user]} setIsLogged />\r\n                }\r\n            </>\r\n        }\r\n        {!logged &&\r\n            <Login user={user} setUser={setUser} setIsCliente={setIsCliente} setIsRestaurante={setIsRestaurante} setIsEstafeta={setIsEstafeta} />\r\n        }\r\n    </>);\r\n}\r\n\r\nfunction Login({ navigation, setIsLogged, setIsCliente, setIsRestaurante, setIsEstafeta, user, setUser }) {\r\n    const [password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Nutrilink</Text>\r\n            <View style={styles.loginContainer}>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Username' style={styles.input} onChangeText={username => setUser(username)} />\r\n                </View>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Password' style={styles.input} onChangeText={pass => setPassword(pass)} secureTextEntry />\r\n                </View>\r\n                <View style={styles.containerRow}>\r\n                    <TouchableOpacity style={styles.loginButtonContainer} onPress={() => {\r\n                        for (let typeUser of Object.keys(users))\r\n                            if (user === typeUser) {\r\n                                switch (users[user].type) {\r\n                                    case \"cliente\":\r\n                                        dispatch(setLogged(true));\r\n                                        setIsCliente(true);\r\n                                        break;\r\n                                    case \"restaurante\":\r\n                                        dispatch(setLogged(true));\r\n                                        setIsRestaurante(true);\r\n                                        break;\r\n                                    case \"estafeta\":\r\n                                        dispatch(setLogged(true));\r\n                                        setIsEstafeta(true);\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            }\r\n                    }}>\r\n                        <Text style={styles.loginButtonText}>       Login       </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.loginButtonContainer}>\r\n                        <Text style={styles.loginButtonText}>    Registar    </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        flex: 1\r\n\r\n    },\r\n    containerRow: {\r\n        paddingTop: 20,\r\n        flexDirection: 'row'\r\n    },\r\n    loginContainer: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: 1\r\n    },\r\n    title: {\r\n        borderTopWidth: 100,\r\n        borderTopColor: 'darkcyan',\r\n        fontSize: 40,\r\n        fontWeight: 'bold',\r\n        color: 'cornsilk'\r\n    },\r\n    inputView: {\r\n        borderBottomWidth: 10,\r\n        borderBottomColor: 'darkcyan'\r\n    },\r\n    input: {\r\n        backgroundColor: 'darkgray',\r\n        padding: 15,\r\n        borderRadius: 5,\r\n    },\r\n    loginButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 28,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12,\r\n    },\r\n    loginButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}