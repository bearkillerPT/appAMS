{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\appAmsree\\\\screens\\\\AppEstafeta\\\\Orders.js\";\nimport React, { useState, useEffect } from 'react';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Icon2 from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { store, db, images } from \"../../App\";\nexport default function Orders(_ref) {\n  var route = _ref.route;\n  var user = store.getState().cartReducer.user;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      pedidos = _useState2[0],\n      setPedidos = _useState2[1];\n\n  getRestaurante(user, setPedidos);\n  if (pedidos == null || Object.keys(pedidos).length == 0) return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 70\n    }\n  }, React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 76\n    }\n  }, \"N\\xE3o h\\xE1 pedidos de momento!\"));\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Pedidos:\"), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, Object.keys(pedidos).map(function (pedidoI) {\n    return React.createElement(View, {\n      style: styles.button,\n      key: pedidos[pedidoI].Id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }\n    }, React.createElement(Icon2, {\n      name: \"new-box\",\n      size: 50,\n      style: {\n        alignSelf: 'center',\n        paddingHorizontal: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 33\n      }\n    }), React.createElement(View, {\n      style: styles.containerColumn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.restaurantesOffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 37\n      }\n    }, pedidos[pedidoI].Morada), React.createElement(Text, {\n      style: styles.foodText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 37\n      }\n    }, \"Pratos : \"), React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 37\n      }\n    }, pedidos[pedidoI].Pratos.map(function (prato) {\n      return React.createElement(View, {\n        key: pedidos[pedidoI].Id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 53\n        }\n      }, React.createElement(Text, {\n        style: {\n          paddingLeft: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 57\n        }\n      }, prato));\n    })), React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 41\n      }\n    }, \"Status:\", '\\n'), React.createElement(Text, {\n      style: {\n        paddingLeft: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 41\n      }\n    }, pedidos[pedidoI].Status)), pedidos[pedidoI].Restaurante && React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 45\n      }\n    }, \"Restaurante:\", '\\n'), React.createElement(Text, {\n      style: {\n        paddingLeft: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 45\n      }\n    }, pedidos[pedidoI].Restaurante)), pedidos[pedidoI].Estafeta && React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 41\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 45\n      }\n    }, \"Estafeta:\", '\\n'), React.createElement(Text, {\n      style: {\n        paddingLeft: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 45\n      }\n    }, pedidos[pedidoI].Estafeta)), React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }, !pedidos[pedidoI].Estafeta && React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      activeOpacity: 0.3,\n      style: styles.button,\n      onPress: function onPress() {\n        var tmpPedido = pedidos[pedidoI];\n        tmpPedido.Status = \"A entregar\";\n        tmpPedido.Estafeta = user;\n        db.ref(\"/Pedidos/\" + pedidoI).set(tmpPedido);\n        db.ref(\"/restaurantes/\" + pedidos[pedidoI].Restaurante + \"/pedidos/\" + pedidos[pedidoI].Id).set(tmpPedido);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 72\n      }\n    }, React.createElement(Icon2, {\n      name: \"check-bold\",\n      size: 15,\n      style: {\n        borderRightWidth: 5,\n        borderRightColor: 'rgba(0,0,0,0)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 45\n      }\n    }))), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 37\n      }\n    }, pedidos[pedidoI].Estafeta && React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      activeOpacity: 0.3,\n      style: styles.button,\n      onPress: function onPress() {\n        var tmpPedido = pedidos[pedidoI];\n        tmpPedido.Status = \"Entregue\";\n        db.ref(\"/Pedidos/\" + pedidoI).set(tmpPedido);\n        db.ref(\"/restaurantes/\" + pedidos[pedidoI].Restaurante + \"/pedidos/\" + pedidos[pedidoI].Id).set(tmpPedido);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 71\n      }\n    })))));\n  })));\n}\n\nfunction getRestaurante(user, setPedidos) {\n  return _regeneratorRuntime.async(function getRestaurante$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(db.ref(\"Pedidos\").once('value').then(function (res) {\n            setPedidos(res.val());\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar styles = StyleSheet.create({\n  containerRow: {\n    paddingBottom: 10,\n    flexDirection: 'row'\n  },\n  containerColumn: {\n    paddingLeft: 10,\n    paddingBottom: 10,\n    flexDirection: 'column'\n  },\n  restaurantesOffer: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    color: 'black'\n  },\n  foodText: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  button: {\n    padding: 7\n  },\n  image: {\n    width: 150,\n    height: 100\n  }\n});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppEstafeta/Orders.js"],"names":["React","useState","useEffect","Icon","Icon2","store","db","images","Orders","route","user","getState","cartReducer","pedidos","setPedidos","getRestaurante","Object","keys","length","styles","restaurantesOffer","map","pedidoI","button","Id","containerRow","alignSelf","paddingHorizontal","containerColumn","Morada","foodText","Pratos","prato","paddingLeft","Status","Restaurante","Estafeta","tmpPedido","ref","set","borderRightWidth","borderRightColor","once","then","res","val","StyleSheet","create","paddingBottom","flexDirection","fontSize","fontWeight","textAlign","color","padding","image","width","height"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport Icon2 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight, Button } from 'react-native';\r\nimport { store, db, images } from '../../App';\r\n\r\nexport default function Orders({ route }) {\r\n    let user = store.getState().cartReducer.user;\r\n    const [pedidos, setPedidos] = useState({});\r\n    getRestaurante(user, setPedidos);\r\n    if (pedidos == null || Object.keys(pedidos).length == 0) return (<View><Text style={styles.restaurantesOffer}>Não há pedidos de momento!</Text></View>);\r\n    return (\r\n        <View>\r\n            <Text style={styles.restaurantesOffer}>Pedidos:</Text>\r\n            <ScrollView>{\r\n                Object.keys(pedidos).map(pedidoI => {\r\n                    return (\r\n                        <View style={styles.button} key={pedidos[pedidoI].Id}>\r\n                            <View style={styles.containerRow}>\r\n                                <Icon2 name=\"new-box\" size={50} style={{ alignSelf: 'center', paddingHorizontal: 20 }} />\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{pedidos[pedidoI].Morada}</Text>\r\n                                    <Text style={styles.foodText}>Pratos : </Text>\r\n                                    <View style={styles.containerRow}>{\r\n                                        pedidos[pedidoI].Pratos.map(\r\n                                            (prato) => {\r\n                                                return (\r\n                                                    <View key={pedidos[pedidoI].Id}>\r\n                                                        <Text style={{ paddingLeft: 10 }}>{prato}</Text>\r\n                                                    </View>);\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                    </View>\r\n                                    <View style={styles.containerRow}>\r\n                                        <Text>Status:{'\\n'}</Text>\r\n                                        <Text style={{ paddingLeft: 10 }}>{pedidos[pedidoI].Status}</Text>\r\n                                    </View>\r\n                                    {pedidos[pedidoI].Restaurante &&\r\n                                        <View style={styles.containerRow}>\r\n                                            <Text>Restaurante:{'\\n'}</Text>\r\n                                            <Text style={{ paddingLeft: 10 }}>{pedidos[pedidoI].Restaurante}</Text>\r\n                                        </View>\r\n                                    }\r\n                                    {pedidos[pedidoI].Estafeta &&\r\n                                        <View style={styles.containerRow}>\r\n                                            <Text>Estafeta:{'\\n'}</Text>\r\n                                            <Text style={{ paddingLeft: 10 }}>{pedidos[pedidoI].Estafeta}</Text>\r\n                                        </View>\r\n                                    }\r\n                                    <View style={styles.containerRow}>\r\n                                        {!pedidos[pedidoI].Estafeta && <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} onPress={() => {\r\n                                            let tmpPedido = pedidos[pedidoI]\r\n                                            tmpPedido.Status = \"A entregar\";\r\n                                            tmpPedido.Estafeta = user;\r\n                                            db.ref(\"/Pedidos/\" + pedidoI).set(tmpPedido);\r\n                                            db.ref(\"/restaurantes/\" + pedidos[pedidoI].Restaurante + \"/pedidos/\" + pedidos[pedidoI].Id).set(tmpPedido);\r\n                                        }}>\r\n                                            <Icon2 name=\"check-bold\" size={15} style={{ borderRightWidth: 5, borderRightColor: 'rgba(0,0,0,0)' }} />\r\n                                        </TouchableHighlight>}\r\n                                    </View>\r\n                                    <View>\r\n                                        {pedidos[pedidoI].Estafeta && <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} onPress={() => {\r\n                                            let tmpPedido = pedidos[pedidoI]\r\n                                            tmpPedido.Status = \"Entregue\";\r\n                                            db.ref(\"/Pedidos/\" + pedidoI).set(tmpPedido);\r\n                                            db.ref(\"/restaurantes/\" + pedidos[pedidoI].Restaurante + \"/pedidos/\" + pedidos[pedidoI].Id).set(tmpPedido);\r\n                                        }}>\r\n                                        </TouchableHighlight>}\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\nasync function getRestaurante(user, setPedidos) {\r\n    await db.ref(\"Pedidos\").once('value').then(res => { setPedidos(res.val()); });\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        paddingBottom: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}