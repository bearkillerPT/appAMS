{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\appAmsree\\\\screens\\\\Cart.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { addPrato } from \"../assets/cartState\";\nvar Stack = createStackNavigator();\n\nvar imgQuichVeg = require(\"../assets/quicheVegsGluten.jpg\");\n\nvar imgCremeEspi = require(\"../assets/cremedeespinafres.jpg\");\n\nvar imgSaladaQSerra = require(\"../assets/saladaqueijoserra.jpg\");\n\nexport function CartScreen(route) {\n  console.log(route);\n\n  var getTotal = function getTotal() {\n    var res = 0;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(cart), _step; !(_step = _iterator()).done;) {\n      var prato = _step.value;\n      res += prato.Preço;\n    }\n\n    return res;\n  };\n\n  var cart = [{\n    \"name\": \"Salada de queijo da serra\",\n    \"id\": 0,\n    \"Preço\": 7,\n    \"Opçoes\": [\"Extra azeitonas\"],\n    \"image\": imgSaladaQSerra\n  }, {\n    \"name\": \"Quiche Vegetariana s/Glúten\",\n    \"id\": 1,\n    \"Preço\": 6.5,\n    \"Opções\": [],\n    \"image\": imgQuichVeg\n  }, {\n    \"name\": \"Creme de espinafres\",\n    \"id\": 2,\n    \"Preço\": 6.5,\n    \"Opções\": [],\n    \"image\": imgCremeEspi\n  }];\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, cart.map(function (prato) {\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      activeOpacity: 0.3,\n      style: styles.button,\n      key: prato.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: prato.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }), React.createElement(View, {\n      style: styles.containerColumn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.restaurantesOffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, prato.name), React.createElement(Text, {\n      style: styles.foodText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, \"Op\\xE7\\xF5es : \", prato.Opçoes, \"\\n\", \"Pre\\xE7o : \", prato.Preço, \" \\u20AC\"))));\n  })), React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Pre\\xE7o total: \", getTotal(), \"\\u20AC\"), React.createElement(TouchableOpacity, {\n    style: styles.payButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.payButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Pagar\")));\n}\nvar CartConnect = connect(mapStateToProps, mapDispatchToProps)(CartScreen);\nexport default function Cart(route) {\n  return React.createElement(Stack.Navigator, {\n    initialroute: 'Carrinho',\n    screenOptions: {\n      headerTitleAlign: 'center',\n      headerStyle: {\n        backgroundColor: 'darkcyan'\n      },\n      headerTintColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Carrinho\",\n    component: CartConnect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    cart: function cart() {\n      return state.cartReducer.Cart;\n    }\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    add: function add(prato) {\n      return dispatch(addPrato(prato));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  containerRow: {\n    flexDirection: 'row'\n  },\n  containerColumn: {\n    paddingLeft: 10,\n    paddingBottom: 10,\n    flexDirection: 'column'\n  },\n  restaurantesOffer: {\n    fontSize: 15,\n    padding: 15,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    color: 'black'\n  },\n  foodText: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  button: {\n    padding: 7,\n    backgroundColor: \"#DDDDDD\"\n  },\n  image: {\n    width: 150,\n    height: 100\n  },\n  payButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  payButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  }\n});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/Cart.js"],"names":["NavigationContainer","React","useState","connect","createStackNavigator","addPrato","Stack","imgQuichVeg","require","imgCremeEspi","imgSaladaQSerra","CartScreen","route","console","log","getTotal","res","cart","prato","Preço","map","styles","button","id","containerRow","image","containerColumn","restaurantesOffer","name","foodText","Opçoes","payButtonContainer","payButtonText","CartConnect","mapStateToProps","mapDispatchToProps","Cart","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","state","cartReducer","dispatch","add","StyleSheet","create","flexDirection","paddingLeft","paddingBottom","fontSize","padding","fontWeight","textAlign","color","width","height","elevation","borderRadius","paddingVertical","paddingHorizontal","alignSelf","textTransform"],"mappings":"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","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight, TouchableOpacity } from 'react-native';\r\nimport { addPrato } from '../assets/cartState';\r\nconst Stack = createStackNavigator();\r\nvar imgQuichVeg = require('../assets/quicheVegsGluten.jpg');\r\nvar imgCremeEspi = require('../assets/cremedeespinafres.jpg');\r\nvar imgSaladaQSerra = require('../assets/saladaqueijoserra.jpg');\r\n\r\nexport function CartScreen(route) {\r\n    console.log(route)\r\n    const getTotal = () => {\r\n        let res = 0;\r\n        for (let prato of cart) {\r\n            res += prato.Preço;\r\n        }\r\n        return res;\r\n    }\r\n    const cart = [\r\n        {\r\n            \"name\": \"Salada de queijo da serra\",\r\n            \"id\": 0,\r\n            \"Preço\": 7,\r\n            \"Opçoes\": [\"Extra azeitonas\"],\r\n            \"image\": imgSaladaQSerra\r\n        },\r\n        {\r\n            \"name\": \"Quiche Vegetariana s/Glúten\",\r\n            \"id\": 1,\r\n            \"Preço\": 6.5,\r\n            \"Opções\": [],\r\n            \"image\": imgQuichVeg,\r\n        },\r\n        {\r\n            \"name\": \"Creme de espinafres\",\r\n            \"id\": 2,\r\n            \"Preço\": 6.5,\r\n            \"Opções\": [],\r\n            \"image\": imgCremeEspi,\r\n        },\r\n    ];\r\n    return (\r\n        <View>\r\n            <ScrollView>{\r\n                cart.map(prato => {\r\n                    return (\r\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={prato.id}>\r\n                            <View style={styles.containerRow}>\r\n                                <Image style={styles.image} source={prato.image} />\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{prato.name}</Text>\r\n                                    <Text style={styles.foodText}>Opções : {prato.Opçoes}\r\n                                        {\"\\n\"}\r\n                            Preço : {prato.Preço} €</Text>\r\n                                </View>\r\n                            </View>\r\n                        </TouchableHighlight>\r\n\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n            <Text style={styles.restaurantesOffer}>Preço total: {getTotal()}€</Text>\r\n            <TouchableOpacity style={styles.payButtonContainer}>\r\n                <Text style={styles.payButtonText}>Pagar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst CartConnect = connect(mapStateToProps, mapDispatchToProps)(CartScreen);\r\n\r\nexport default function Cart(route) {\r\n    return (\r\n        <Stack.Navigator initialroute={'Carrinho'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' },  headerTintColor:'white' }}>\r\n            <Stack.Screen name=\"Carrinho\" component={CartConnect} />\r\n        </Stack.Navigator>);\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return{\r\n        cart : () => state.cartReducer.Cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        add : (prato) => dispatch(addPrato(prato))\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        padding: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n        backgroundColor: \"#DDDDDD\",\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    },\r\n    payButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12\r\n    },\r\n    payButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}