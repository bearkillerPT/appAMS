{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\appAmsree\\\\screens\\\\Cart.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nvar Stack = createStackNavigator();\nexport function CartScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var getTotal = function getTotal() {\n    var res = 0;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(cart), _step; !(_step = _iterator()).done;) {\n      var prato = _step.value;\n      res += prato.Preço;\n    }\n\n    return res;\n  };\n\n  var cart = [];\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scroll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, cart.map(function (prato) {\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      activeOpacity: 0.3,\n      style: styles.button,\n      key: prato.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: prato.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }\n    }), React.createElement(View, {\n      style: styles.containerColumn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.restaurantesOffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 37\n      }\n    }, prato.name), React.createElement(Text, {\n      style: styles.foodText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 37\n      }\n    }, \"Op\\xE7\\xF5es : \", prato.Opçoes, \"\\n\", \"Pre\\xE7o : \", prato.Preço, \" \\u20AC\"))));\n  })), React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Pre\\xE7o total: \", getTotal(), \"\\u20AC\"));\n}\nexport default function Cart(route) {\n  console.log(route);\n  return React.createElement(Stack.Navigator, {\n    initialroute: 'Carrinho',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Carrinho\",\n    component: CartScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  scroll: {\n    paddingLeft: 10\n  },\n  containerRow: {\n    flexDirection: 'row'\n  },\n  containerColumn: {\n    paddingLeft: 10,\n    paddingBottom: 10,\n    flexDirection: 'column'\n  },\n  restaurantesOffer: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    color: 'black'\n  },\n  foodText: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  button: {\n    padding: 7,\n    backgroundColor: \"#DDDDDD\"\n  },\n  image: {\n    width: 150,\n    height: 100\n  }\n});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/Cart.js"],"names":["NavigationContainer","React","useState","createStackNavigator","Stack","CartScreen","navigation","route","getTotal","res","cart","prato","Preço","styles","scroll","map","button","id","containerRow","image","containerColumn","restaurantesOffer","name","foodText","Opçoes","Cart","console","log","StyleSheet","create","paddingLeft","flexDirection","paddingBottom","fontSize","fontWeight","textAlign","color","padding","backgroundColor","width","height"],"mappings":";;;;;;;;AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;;;;;;AAEA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;AACA,OAAO,SAASE,UAAT,OAAyC;AAAA,MAApBC,UAAoB,QAApBA,UAAoB;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AAC5C,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,QAAIC,GAAG,GAAG,CAAV;;AACA,yDAAkBC,IAAlB,wCAAwB;AAAA,UAAfC,KAAe;AACpBF,MAAAA,GAAG,IAAIE,KAAK,CAACC,KAAb;AACH;;AACD,WAAOH,GAAP;AACH,GAND;;AAOA,MAAMC,IAAI,GAAG,EAAb;AACA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEG,MAAM,CAACC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIJ,IAAI,CAACK,GAAL,CAAS,UAAAJ,KAAK,EAAI;AACd,WACI,oBAAC,kBAAD;AAAoB,MAAA,aAAa,EAAE,SAAnC;AAA8C,MAAA,aAAa,EAAE,GAA7D;AAAkE,MAAA,KAAK,EAAEE,MAAM,CAACG,MAAhF;AAAwF,MAAA,GAAG,EAAEL,KAAK,CAACM,EAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACK,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEL,MAAM,CAACM,KAArB;AAA4B,MAAA,MAAM,EAAER,KAAK,CAACQ,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACO,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACQ,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCV,KAAK,CAACW,IAA9C,CADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACU,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwCZ,KAAK,CAACa,MAA9C,EACK,IADL,iBAECb,KAAK,CAACC,KAFP,YAFJ,CAFJ,CADJ,CADJ;AAcH,GAfD,CADJ,CADJ,EAmBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACQ,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqDb,QAAQ,EAA7D,WAnBJ,CADJ;AAwBH;AAED,eAAe,SAASiB,IAAT,CAAclB,KAAd,EAAqB;AAEhCmB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACA,SACI,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,YAAY,EAAE,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEF,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;AAED,IAAMQ,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC7Bf,EAAAA,MAAM,EAAG;AACLgB,IAAAA,WAAW,EAAE;AADR,GADoB;AAI7BZ,EAAAA,YAAY,EAAE;AACVa,IAAAA,aAAa,EAAE;AADL,GAJe;AAO7BX,EAAAA,eAAe,EAAE;AACbU,IAAAA,WAAW,EAAE,EADA;AAEbE,IAAAA,aAAa,EAAE,EAFF;AAGbD,IAAAA,aAAa,EAAE;AAHF,GAPY;AAY7BV,EAAAA,iBAAiB,EAAE;AACfY,IAAAA,QAAQ,EAAE,EADK;AAEfC,IAAAA,UAAU,EAAE,MAFG;AAGfC,IAAAA,SAAS,EAAE,MAHI;AAIfC,IAAAA,KAAK,EAAE;AAJQ,GAZU;AAkB7Bb,EAAAA,QAAQ,EAAE;AACNU,IAAAA,QAAQ,EAAE,EADJ;AAENE,IAAAA,SAAS,EAAE;AAFL,GAlBmB;AAuB7BnB,EAAAA,MAAM,EAAE;AACJqB,IAAAA,OAAO,EAAE,CADL;AAEJC,IAAAA,eAAe,EAAE;AAFb,GAvBqB;AA2B7BnB,EAAAA,KAAK,EAAE;AACHoB,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL;AA3BsB,CAAlB,CAAf","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\r\nconst Stack = createStackNavigator();\r\nexport function CartScreen({navigation, route}) {\r\n    const getTotal = () => {\r\n        let res = 0;\r\n        for (let prato of cart) {\r\n            res += prato.Preço;\r\n        }\r\n        return res;\r\n    }\r\n    const cart = [];\r\n    return (\r\n        <View>\r\n            <ScrollView style={styles.scroll}>{\r\n                cart.map(prato => {\r\n                    return (\r\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={prato.id}>\r\n                            <View style={styles.containerRow}>\r\n                                <Image style={styles.image} source={prato.image} />\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{prato.name}</Text>\r\n                                    <Text style={styles.foodText}>Opções : {prato.Opçoes}\r\n                                        {\"\\n\"}\r\n                            Preço : {prato.Preço} €</Text>\r\n                                </View>\r\n                            </View>\r\n                        </TouchableHighlight>\r\n\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n            <Text style={styles.restaurantesOffer}>Preço total: {getTotal()}€</Text>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nexport default function Cart(route) {\r\n\r\n    console.log(route)\r\n    return (\r\n        <Stack.Navigator initialroute={'Carrinho'} >\r\n            <Stack.Screen name=\"Carrinho\" component={CartScreen}/>\r\n        </Stack.Navigator>);\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    scroll : {\r\n        paddingLeft: 10,\r\n    },\r\n    containerRow: {\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n        backgroundColor: \"#DDDDDD\",\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}