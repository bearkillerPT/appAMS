{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\appAMS\\\\screens\\\\AppCliente\\\\RestauranteMenu.js\";\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useDispatch } from 'react-redux';\nimport { addPrato } from \"../../assets/cartState\";\nimport { db, images, store } from \"../../App\";\nexport default function RestauranteMenu(_ref) {\n  var route = _ref.route;\n  var restauranteName = route.params.restaurante[\"Name\"];\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      pratos = _useState2[0],\n      setPratos = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cart = _useState4[0],\n      setCart = _useState4[1];\n\n  var user = store.getState().cartReducer.user;\n  db.ref(\"Users/\" + user + \"/cart\").once('value').then(function (res) {\n    setCart(res.val());\n  });\n  db.ref(\"restaurantes/\" + restauranteName + \"/Pratos\").once('value').then(function (res) {\n    return setPratos(res.val());\n  });\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Pratos Dispon\\xEDveis:\"), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, Object.keys(pratos).map(function (prato) {\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      activeOpacity: 0.3,\n      style: styles.button,\n      key: pratos[prato].Id,\n      onPress: function onPress() {\n        if (checkSameRestaurant(cart, restauranteName)) db.ref('Users/' + user + \"/cart\").push(pratos[prato]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: getImageByName(pratos[prato].image),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }\n    }), React.createElement(View, {\n      style: styles.containerColumn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.restaurantesOffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 37\n      }\n    }, pratos[prato].Name), React.createElement(Text, {\n      style: styles.foodText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 37\n      }\n    }, \"Op\\xE7\\xF5es : \", pratos[prato].Opcoes, \"\\n\", \"Pre\\xE7o : \", pratos[prato].Preco, \" \\u20AC\"))));\n  })));\n}\n\nvar getImageByName = function getImageByName(imageName) {\n  var img = images[imageName];\n  if (img != null) return img;\n  return images[\"default\"];\n};\n\nfunction checkSameRestaurant(cart, currentRestauranteName) {\n  if (cart == null) return true;\n\n  for (var prato in Object.values(cart)) {\n    if (prato.Restaurante != currentRestauranteName) return false;\n  }\n\n  return true;\n}\n\nvar styles = StyleSheet.create({\n  containerRow: {\n    paddingBottom: 10,\n    flexDirection: 'row'\n  },\n  containerColumn: {\n    paddingLeft: 10,\n    paddingBottom: 10,\n    flexDirection: 'column'\n  },\n  restaurantesOffer: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    color: 'black'\n  },\n  foodText: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  button: {\n    padding: 7\n  },\n  image: {\n    width: 150,\n    height: 100\n  }\n});","map":{"version":3,"sources":["D:/dev/appAMS/screens/AppCliente/RestauranteMenu.js"],"names":["React","useState","useEffect","useContext","useCallback","useDispatch","addPrato","db","images","store","RestauranteMenu","route","restauranteName","params","restaurante","pratos","setPratos","cart","setCart","user","getState","cartReducer","ref","once","then","res","val","flex","styles","restaurantesOffer","Object","keys","map","prato","button","Id","checkSameRestaurant","push","containerRow","image","getImageByName","containerColumn","Name","foodText","Opcoes","Preco","imageName","img","currentRestauranteName","values","Restaurante","StyleSheet","create","paddingBottom","flexDirection","paddingLeft","fontSize","fontWeight","textAlign","color","padding","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPrato } from '../../assets/cartState';\r\nimport { db, images, store } from '../../App';\r\n\r\nexport default function RestauranteMenu({ route }) {\r\n    const restauranteName = route.params.restaurante[\"Name\"];\r\n    const [pratos, setPratos] = useState({});\r\n    const [cart, setCart] = useState([]);\r\n    let user = store.getState().cartReducer.user;\r\n    db.ref(\"Users/\" + user + \"/cart\").once('value').then(res => { setCart(res.val()) });\r\n    db.ref(\"restaurantes/\" + restauranteName + \"/Pratos\").once('value').then(res => setPratos(res.val()));\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Text style={styles.restaurantesOffer}>Pratos DisponÃ­veis:</Text>\r\n            <ScrollView>{\r\n                Object.keys(pratos).map(prato => {\r\n                    return (\r\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={pratos[prato].Id} onPress={() => {\r\n                            if (checkSameRestaurant(cart, restauranteName))\r\n                                db.ref('Users/' + user + \"/cart\").push(pratos[prato]);\r\n                        }}>\r\n                            <View style={styles.containerRow}>\r\n                                <Image style={styles.image} source={getImageByName(pratos[prato].image)} />\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{pratos[prato].Name}</Text>\r\n                                    <Text style={styles.foodText}>OpÃ§Ãµes : {pratos[prato].Opcoes}\r\n                                        {\"\\n\"}\r\n                            PreÃ§o : {pratos[prato].Preco} â¬</Text>\r\n                                </View>\r\n                            </View>\r\n                        </TouchableHighlight>\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst getImageByName = (imageName) => {\r\n    let img = images[imageName]\r\n    if (img != null) return img\r\n    return images[\"default\"]\r\n}\r\n\r\n\r\nfunction checkSameRestaurant(cart, currentRestauranteName) {\r\n    if (cart == null) return true;\r\n    for (let prato in Object.values(cart)) {\r\n        if (prato.Restaurante != currentRestauranteName)\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        paddingBottom: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}