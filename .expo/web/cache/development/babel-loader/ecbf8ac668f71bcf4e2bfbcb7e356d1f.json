{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\appAmsree\\\\screens\\\\AppCliente\\\\RestauranteMenu.js\";\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useDispatch } from 'react-redux';\nimport { addPrato } from \"../../assets/cartState\";\nimport { db, images } from \"../../App\";\nexport default function RestauranteMenu(_ref) {\n  var route = _ref.route;\n  var restauranteName = route.params.restaurante[\"Name\"];\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      pratos = _useState2[0],\n      setPratos = _useState2[1];\n\n  useEffect(function () {\n    db.ref(\"restaurantes/\" + restauranteName + \"/Pratos\").once('value').then(function (res) {\n      return setPratos(res.val());\n    });\n  }, []);\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.restaurantesOffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Pratos Dispon\\xEDveis:\"), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, Object.keys(pratos).map(function (prato) {\n    console.log(pratos[prato]);\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"#DDDDDD\",\n      activeOpacity: 0.3,\n      style: styles.button,\n      key: pratos[prato].Id,\n      onPress: function onPress() {\n        return dispatch(addPrato(pratos[prato]));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.containerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 29\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: pratos[prato].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 33\n      }\n    }), React.createElement(View, {\n      style: styles.containerColumn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.restaurantesOffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 37\n      }\n    }, pratos[prato].Name), React.createElement(Text, {\n      style: styles.foodText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 37\n      }\n    }, \"Op\\xE7\\xF5es : \", pratos[prato].Opcoes, \"\\n\", \"Pre\\xE7o : \", pratos[prato].Preco, \" \\u20AC\"))));\n  })));\n}\n\nvar getImageByName = function getImageByName(imageName) {\n  var img = images[imageName];\n  if (img != null) return img;\n  return images[\"default\"];\n};\n\nvar styles = StyleSheet.create({\n  containerRow: {\n    paddingBottom: 10,\n    flexDirection: 'row'\n  },\n  containerColumn: {\n    paddingLeft: 10,\n    paddingBottom: 10,\n    flexDirection: 'column'\n  },\n  restaurantesOffer: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    color: 'black'\n  },\n  foodText: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  button: {\n    padding: 7\n  },\n  image: {\n    width: 150,\n    height: 100\n  }\n});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppCliente/RestauranteMenu.js"],"names":["React","useState","useEffect","useContext","useCallback","useDispatch","addPrato","db","images","RestauranteMenu","route","restauranteName","params","restaurante","pratos","setPratos","ref","once","then","res","val","dispatch","styles","restaurantesOffer","Object","keys","map","prato","console","log","button","Id","containerRow","image","containerColumn","Name","foodText","Opcoes","Preco","getImageByName","imageName","img","StyleSheet","create","paddingBottom","flexDirection","paddingLeft","fontSize","fontWeight","textAlign","color","padding","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { addPrato } from '../../assets/cartState';\nimport { db, images } from '../../App';\n\nexport default function RestauranteMenu({ route }) {\n    const restauranteName = route.params.restaurante[\"Name\"];\n    const [pratos, setPratos] = useState({});\n    useEffect(() => {\n        db.ref(\"restaurantes/\" + restauranteName + \"/Pratos\").once('value').then(res => setPratos(res.val()));\n    }, []);\n    const dispatch = useDispatch();\n    return (\n        <View>\n            <Text style={styles.restaurantesOffer}>Pratos Disponíveis:</Text>\n            <ScrollView>{\n                Object.keys(pratos).map(prato => {\n                    console.log(pratos[prato])\n                    return (\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={pratos[prato].Id} onPress={() => dispatch(addPrato(pratos[prato]))}>\n                            <View style={styles.containerRow}>\n                                <Image style={styles.image} source={pratos[prato].image} />\n                                <View style={styles.containerColumn}>\n                                    <Text style={styles.restaurantesOffer}>{pratos[prato].Name}</Text>\n                                    <Text style={styles.foodText}>Opções : {pratos[prato].Opcoes}\n                                        {\"\\n\"}\n                            Preço : {pratos[prato].Preco} €</Text>\n                                </View>\n                            </View>\n                        </TouchableHighlight>\n                    );\n                })\n            }</ScrollView>\n        </View>\n\n    );\n}\n\nconst getImageByName = (imageName) => {\n    let img = images[imageName]\n    if (img != null) return img\n    return images[\"default\"]\n}\n\nconst styles = StyleSheet.create({\n    containerRow: {\n        paddingBottom: 10,\n        flexDirection: 'row'\n    },\n    containerColumn: {\n        paddingLeft: 10,\n        paddingBottom: 10,\n        flexDirection: 'column'\n    },\n    restaurantesOffer: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'left',\n        color: 'black'\n    },\n    foodText: {\n        fontSize: 12,\n        textAlign: 'left',\n\n    },\n    button: {\n        padding: 7,\n    },\n    image: {\n        width: 150,\n        height: 100,\n    }\n});"]},"metadata":{},"sourceType":"module"}