{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { restaurants } from \"../App\";\nvar INITIAL_CART = {\n  cart: [],\n  restaurant: ''\n};\nexport var addPrato = function addPrato(prato) {\n  return {\n    'type': 'addPrato',\n    'payload': prato\n  };\n};\nexport var delPrato = function delPrato(prato) {\n  return {\n    'type': 'delPrato',\n    'payload': prato\n  };\n};\n\nfunction cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_CART;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'addPrato':\n      var restauranteIn = '';\n\n      for (restaurant in restaurants) {\n        for (prato in restaurant.Pratos) {\n          if (prato === action.payload) return _objectSpread(_objectSpread({}, state), {}, {\n            cart: state.cart.concat(action.payload)\n          });\n        }\n      }\n\n    case 'delPrato':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: state.cart.filter(function (prato) {\n          return prato !== action.payload;\n        })\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  cartReducer: cartReducer\n});","map":{"version":3,"sources":["D:/dev/appAmsree/assets/cartState.js"],"names":["combineReducers","restaurants","INITIAL_CART","cart","restaurant","addPrato","prato","delPrato","cartReducer","state","action","type","restauranteIn","Pratos","payload","concat","filter"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,WAAT;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;AAKA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAK;AAC9B,YAAS,UADqB;AAE9B,eAAYA;AAFkB,GAAL;AAAA,CAAtB;AAKP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAD,KAAK;AAAA,SAAK;AAC9B,YAAS,UADqB;AAE9B,eAAYA;AAFkB,GAAL;AAAA,CAAtB;;AAKP,SAASE,WAAT,GAAqD;AAAA,MAAhCC,KAAgC,uEAAxBP,YAAwB;AAAA,MAAVQ,MAAU;;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACI,UAAIC,aAAa,GAAG,EAApB;;AACA,WAAKR,UAAL,IAAmBH,WAAnB;AAAiC,aAAKK,KAAL,IAAcF,UAAU,CAACS,MAAzB;AAAkC,cAAIP,KAAK,KAAKI,MAAM,CAACI,OAArB,EACnE,uCAAUL,KAAV;AACAN,YAAAA,IAAI,EAAEM,KAAK,CAACN,IAAN,CAAWY,MAAX,CAAkBL,MAAM,CAACI,OAAzB;AADN;AADiC;AAAjC;;AAGJ,SAAK,UAAL;AACI,6CAAUL,KAAV;AACAN,QAAAA,IAAI,EAAEM,KAAK,CAACN,IAAN,CAAWa,MAAX,CAAkB,UAAAV,KAAK;AAAA,iBAAIA,KAAK,KAAKI,MAAM,CAACI,OAArB;AAAA,SAAvB;AADN;;AAEJ;AACI,aAAOL,KAAP;AAVR;AAYH;;AAED,eAAeT,eAAe,CAAC;AAC3BQ,EAAAA,WAAW,EAAEA;AADc,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { restaurants } from '../App';\r\nconst INITIAL_CART = {\r\n    cart: [],\r\n    restaurant: ''\r\n}\r\n\r\nexport const addPrato = prato => ({\r\n    'type' : 'addPrato',\r\n    'payload' : prato\r\n});\r\n\r\nexport const delPrato = prato => ({\r\n    'type' : 'delPrato',\r\n    'payload' : prato\r\n});\r\n\r\nfunction cartReducer(state = INITIAL_CART, action)   {\r\n    switch(action.type) {\r\n        case 'addPrato':\r\n            let restauranteIn = '';\r\n            for( restaurant in restaurants ) for( prato in restaurant.Pratos ) if (prato === action.payload)   \r\n            return{...state,\r\n            cart: state.cart.concat(action.payload)}\r\n        case 'delPrato':\r\n            return{...state,\r\n            cart: state.cart.filter(prato => prato !== action.payload)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    cartReducer: cartReducer\r\n  });\r\n  "]},"metadata":{},"sourceType":"module"}