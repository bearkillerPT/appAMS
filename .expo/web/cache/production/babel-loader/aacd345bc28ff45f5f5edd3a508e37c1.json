{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect,useContext,useCallback}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Image from\"react-native-web/dist/exports/Image\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import{useDispatch}from'react-redux';import{addPrato}from\"../../assets/cartState\";import{db,images,store}from\"../../App\";export default function RestauranteMenu(_ref){var route=_ref.route;var restauranteName=route.params.restaurante[\"Name\"];var _useState=useState({}),_useState2=_slicedToArray(_useState,2),pratos=_useState2[0],setPratos=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cart=_useState4[0],setCart=_useState4[1];var user=store.getState().cartReducer.user;useEffect(function(){db.ref(\"restaurantes/\"+restauranteName+\"/Pratos\").once('value').then(function(res){return setPratos(res.val());});},[]);var dispatch=useDispatch();return React.createElement(View,null,React.createElement(Text,{style:styles.restaurantesOffer},\"Pratos Dispon\\xEDveis:\"),React.createElement(ScrollView,null,Object.keys(pratos).map(function(prato){console.log(pratos[prato]);return React.createElement(TouchableHighlight,{underlayColor:\"#DDDDDD\",activeOpacity:0.3,style:styles.button,key:pratos[prato].Id,onPress:function onPress(){db.ref('Users/'+user+\"/cart\").push(pratos[prato]);}},React.createElement(View,{style:styles.containerRow},React.createElement(Image,{style:styles.image,source:getImageByName(pratos[prato].image)}),React.createElement(View,{style:styles.containerColumn},React.createElement(Text,{style:styles.restaurantesOffer},pratos[prato].Name),React.createElement(Text,{style:styles.foodText},\"Op\\xE7\\xF5es : \",pratos[prato].Opcoes,\"\\n\",\"Pre\\xE7o : \",pratos[prato].Preco,\" \\u20AC\"))));})));}var getImageByName=function getImageByName(imageName){var img=images[imageName];if(img!=null)return img;return images[\"default\"];};var styles=StyleSheet.create({containerRow:{paddingBottom:10,flexDirection:'row'},containerColumn:{paddingLeft:10,paddingBottom:10,flexDirection:'column'},restaurantesOffer:{fontSize:15,fontWeight:'bold',textAlign:'left',color:'black'},foodText:{fontSize:12,textAlign:'left'},button:{padding:7},image:{width:150,height:100}});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppCliente/RestauranteMenu.js"],"names":["React","useState","useEffect","useContext","useCallback","useDispatch","addPrato","db","images","store","RestauranteMenu","route","restauranteName","params","restaurante","pratos","setPratos","cart","setCart","user","getState","cartReducer","ref","once","then","res","val","dispatch","styles","restaurantesOffer","Object","keys","map","prato","console","log","button","Id","push","containerRow","image","getImageByName","containerColumn","Name","foodText","Opcoes","Preco","imageName","img","StyleSheet","create","paddingBottom","flexDirection","paddingLeft","fontSize","fontWeight","textAlign","color","padding","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { addPrato } from '../../assets/cartState';\nimport { db, images, store } from '../../App';\n\nexport default function RestauranteMenu({ route }) {\n    const restauranteName = route.params.restaurante[\"Name\"];\n    const [pratos, setPratos] = useState({});\n    const [cart, setCart] = useState([]);\n    \n    let user = store.getState().cartReducer.user; \n    useEffect(() => {\n        db.ref(\"restaurantes/\" + restauranteName + \"/Pratos\").once('value').then(res => setPratos(res.val()));\n    }, []);\n    const dispatch = useDispatch();\n    return (\n        <View>\n            <Text style={styles.restaurantesOffer}>Pratos Disponíveis:</Text>\n            <ScrollView>{\n                Object.keys(pratos).map(prato => {\n                    console.log(pratos[prato])\n                    return (\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={pratos[prato].Id} onPress={() => {                       \n                                db.ref('Users/' + user + \"/cart\").push(pratos[prato]);\n                            }}>\n                            <View style={styles.containerRow}>\n                                <Image style={styles.image} source={getImageByName(pratos[prato].image)} />\n                                <View style={styles.containerColumn}>\n                                    <Text style={styles.restaurantesOffer}>{pratos[prato].Name}</Text>\n                                    <Text style={styles.foodText}>Opções : {pratos[prato].Opcoes}\n                                        {\"\\n\"}\n                            Preço : {pratos[prato].Preco} €</Text>\n                                </View>\n                            </View>\n                        </TouchableHighlight>\n                    );\n                })\n            }</ScrollView>\n        </View>\n\n    );\n}\n\nconst getImageByName = (imageName) => {\n    let img = images[imageName]\n    if (img != null) return img\n    return images[\"default\"]\n}\n\nconst styles = StyleSheet.create({\n    containerRow: {\n        paddingBottom: 10,\n        flexDirection: 'row'\n    },\n    containerColumn: {\n        paddingLeft: 10,\n        paddingBottom: 10,\n        flexDirection: 'column'\n    },\n    restaurantesOffer: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'left',\n        color: 'black'\n    },\n    foodText: {\n        fontSize: 12,\n        textAlign: 'left',\n\n    },\n    button: {\n        padding: 7,\n    },\n    image: {\n        width: 150,\n        height: 100,\n    }\n});"]},"metadata":{},"sourceType":"module"}