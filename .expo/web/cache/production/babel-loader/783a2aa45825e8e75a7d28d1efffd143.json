{"ast":null,"code":"export var UpdateEventType;(function(UpdateEventType){UpdateEventType[\"UPDATE_AVAILABLE\"]=\"updateAvailable\";UpdateEventType[\"NO_UPDATE_AVAILABLE\"]=\"noUpdateAvailable\";UpdateEventType[\"ERROR\"]=\"error\";})(UpdateEventType||(UpdateEventType={}));","map":{"version":3,"sources":["../src/Updates.types.ts"],"names":[],"mappings":"AAEA,MAAA,IAAY,CAAA,eAAZ,CAAA,CAAA,SAAY,eAAZ,CAA2B,CACzB,eAAA,CAAA,kBAAA,CAAA,CAAA,iBAAA,CACA,eAAA,CAAA,qBAAA,CAAA,CAAA,mBAAA,CACA,eAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CACD,CAJD,EAAY,eAAe,GAAf,eAAe,CAAA,EAAA,CAA3B","sourcesContent":["import Constants from 'expo-constants';\n\nexport enum UpdateEventType {\n  UPDATE_AVAILABLE = 'updateAvailable',\n  NO_UPDATE_AVAILABLE = 'noUpdateAvailable',\n  ERROR = 'error',\n}\n\n// TODO(eric): move source of truth for manifest type to this module\nexport type Manifest = typeof Constants.manifest;\n\nexport type UpdateCheckResult = { isAvailable: false } | { isAvailable: true; manifest: Manifest };\n\nexport type UpdateFetchResult = { isNew: false } | { isNew: true; manifest: Manifest };\n\nexport type Listener<E> = (event: E) => void;\n\nexport type UpdateEvent =\n  | { type: UpdateEventType.NO_UPDATE_AVAILABLE }\n  | { type: UpdateEventType.UPDATE_AVAILABLE; manifest: Manifest }\n  | { type: UpdateEventType.ERROR; message: string };\n\nexport type LocalAssets = { [remoteUrl: string]: string };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}