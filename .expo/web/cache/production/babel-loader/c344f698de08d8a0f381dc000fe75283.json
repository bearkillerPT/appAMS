{"ast":null,"code":"import React,{useState}from'react';import{createBottomTabNavigator}from'@react-navigation/bottom-tabs';import{NavigationContainer}from'@react-navigation/native';import Icon1 from\"@expo/vector-icons/MaterialCommunityIcons\";import Icon from\"@expo/vector-icons/Ionicons\";import RestaurantDishes from\"./PratosStack\";import OrdersStack from\"./OrdersStack\";import{Restart}from'fiction-expo-restart';import{db}from\"../../App\";import{setLogged}from\"../../assets/cartState\";import{useDispatch}from'react-redux';var imgVegifruit=require(\"../../assets/vegifruit.png\");var imgGreenCity=require(\"../../assets/greencity.png\");var imgSaladasmais=require(\"../../assets/saladasmais.jpg\");var imgQuichVeg=require(\"../../assets/quicheVegsGluten.jpg\");var imgCremeEspi=require(\"../../assets/cremedeespinafres.jpg\");var imgSaladaQSerra=require(\"../../assets/saladaqueijoserra.jpg\");var imgSandesBase=require(\"../../assets/sandesBase.jpg\");var imgPratoCarne=require(\"../../assets/pratoCarne.jpg\");var imgPratoPeixe=require(\"../../assets/pratoPeixe.jpg\");var Tab=createBottomTabNavigator();export default function App(){var dispatch=useDispatch();dispatch(setLogged(false));return React.createElement(NavigationContainer,{independent:true},React.createElement(Tab.Navigator,{initialRouteName:\"Restaurante\",screenOptions:function screenOptions(_ref){var route=_ref.route;return{tabBarIcon:function tabBarIcon(_ref2){var focused=_ref2.focused,color=_ref2.color,size=_ref2.size;var iconName;if(route.name==='Restaurante'){return React.createElement(Icon,{name:\"ios-restaurant\",size:size,color:color});}else if(route.name===\"Pedidos\")return React.createElement(Icon1,{name:\"food\",size:size,color:color});else return React.createElement(Icon1,{name:\"logout\",size:size,color:color});}};},tabBarOptions:{activeTintColor:'tomato',inactiveTintColor:'gray'}},React.createElement(Tab.Screen,{name:\"Restaurante\",component:RestaurantDishes}),React.createElement(Tab.Screen,{name:\"Pedidos\",component:OrdersStack}),React.createElement(Tab.Screen,{name:\"Logout\",component:Logout})));}export function Logout(_ref3){var navigation=_ref3.navigation;Restart();return React.createElement(React.Fragment,null);}","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppRestaurante/AppRestaurante.js"],"names":["React","useState","createBottomTabNavigator","NavigationContainer","Icon1","Icon","RestaurantDishes","OrdersStack","Restart","db","setLogged","useDispatch","imgVegifruit","require","imgGreenCity","imgSaladasmais","imgQuichVeg","imgCremeEspi","imgSaladaQSerra","imgSandesBase","imgPratoCarne","imgPratoPeixe","Tab","App","dispatch","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","Logout","navigation"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,wBAAT,KAAyC,+BAAzC,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,KAAP,iDACA,MAAOC,CAAAA,IAAP,mCACA,MAAOC,CAAAA,gBAAP,qBACA,MAAOC,CAAAA,WAAP,qBACA,OAAQC,OAAR,KAAsB,sBAAtB,CACA,OAAQC,EAAR,iBACA,OAASC,SAAT,8BACA,OAASC,WAAT,KAA4B,aAA5B,CACA,GAAIC,CAAAA,YAAY,CAAGC,OAAO,8BAA1B,CACA,GAAIC,CAAAA,YAAY,CAAGD,OAAO,8BAA1B,CACA,GAAIE,CAAAA,cAAc,CAAGF,OAAO,gCAA5B,CACA,GAAIG,CAAAA,WAAW,CAAGH,OAAO,qCAAzB,CACA,GAAII,CAAAA,YAAY,CAAGJ,OAAO,sCAA1B,CACA,GAAIK,CAAAA,eAAe,CAAGL,OAAO,sCAA7B,CACA,GAAIM,CAAAA,aAAa,CAAGN,OAAO,+BAA3B,CACA,GAAIO,CAAAA,aAAa,CAAGP,OAAO,+BAA3B,CACA,GAAIQ,CAAAA,aAAa,CAAGR,OAAO,+BAA3B,CAGA,GAAMS,CAAAA,GAAG,CAAGpB,wBAAwB,EAApC,CAEA,cAAe,SAASqB,CAAAA,GAAT,EAAe,CAC5B,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CACAa,QAAQ,CAACd,SAAS,CAAC,KAAD,CAAV,CAAR,CACA,MACE,qBAAC,mBAAD,EAAqB,WAAW,CAAE,IAAlC,EACE,oBAAC,GAAD,CAAK,SAAL,EAAe,gBAAgB,CAAC,aAAhC,CAA8C,aAAa,CAAE,gCAAGe,CAAAA,KAAH,MAAGA,KAAH,OAAgB,CAC3EC,UAAU,CAAE,0BAA8B,IAA3BC,CAAAA,OAA2B,OAA3BA,OAA2B,CAAlBC,KAAkB,OAAlBA,KAAkB,CAAXC,IAAW,OAAXA,IAAW,CACxC,GAAIC,CAAAA,QAAJ,CACA,GAAIL,KAAK,CAACM,IAAN,GAAe,aAAnB,CAAkC,CAChC,MAAO,qBAAC,IAAD,EAAM,IAAI,CAAE,gBAAZ,CAA8B,IAAI,CAAEF,IAApC,CAA0C,KAAK,CAAED,KAAjD,EAAP,CACD,CAFD,IAGK,IAAIH,KAAK,CAACM,IAAN,GAAe,SAAnB,CACH,MAAO,qBAAC,KAAD,EAAO,IAAI,CAAE,MAAb,CAAqB,IAAI,CAAEF,IAA3B,CAAiC,KAAK,CAAED,KAAxC,EAAP,CADG,IAGH,OAAO,qBAAC,KAAD,EAAO,IAAI,CAAE,QAAb,CAAuB,IAAI,CAAEC,IAA7B,CAAmC,KAAK,CAAED,KAA1C,EAAP,CACH,CAV0E,CAAhB,EAA7D,CAYE,aAAa,CAAE,CACbI,eAAe,CAAE,QADJ,CAEbC,iBAAiB,CAAE,MAFN,CAZjB,EAgBE,oBAAC,GAAD,CAAK,MAAL,EAAY,IAAI,CAAC,aAAjB,CAA+B,SAAS,CAAE3B,gBAA1C,EAhBF,CAiBE,oBAAC,GAAD,CAAK,MAAL,EAAY,IAAI,CAAC,SAAjB,CAA2B,SAAS,CAAEC,WAAtC,EAjBF,CAkBE,oBAAC,GAAD,CAAK,MAAL,EAAY,IAAI,CAAC,QAAjB,CAA0B,SAAS,CAAE2B,MAArC,EAlBF,CADF,CADF,CAuBD,CAGD,MAAO,SAASA,CAAAA,MAAT,OAA8B,IAAbC,CAAAA,UAAa,OAAbA,UAAa,CAEnC3B,OAAO,GACP,MAAO,yCAAP,CACD","sourcesContent":["import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Icon1 from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport RestaurantDishes from './PratosStack';\nimport OrdersStack from './OrdersStack';\nimport {Restart} from 'fiction-expo-restart';\nimport {db} from '../../App';\nimport { setLogged } from '../../assets/cartState';\nimport { useDispatch } from 'react-redux';\nvar imgVegifruit = require('../../assets/vegifruit.png');\nvar imgGreenCity = require('../../assets/greencity.png');\nvar imgSaladasmais = require('../../assets/saladasmais.jpg');\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\nvar imgSandesBase = require('../../assets/sandesBase.jpg');\nvar imgPratoCarne = require('../../assets/pratoCarne.jpg');\nvar imgPratoPeixe = require('../../assets/pratoPeixe.jpg');\n\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  const dispatch = useDispatch();\n  dispatch(setLogged(false));\n  return (\n    <NavigationContainer independent={true}>\n      <Tab.Navigator initialRouteName='Restaurante' screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          if (route.name === 'Restaurante') {\n            return <Icon name={\"ios-restaurant\"} size={size} color={color} />;\n          }\n          else if (route.name === \"Pedidos\")\n            return <Icon1 name={\"food\"} size={size} color={color} />;\n          else \n            return <Icon1 name={\"logout\"} size={size} color={color} />;\n        },\n      })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}>\n        <Tab.Screen name=\"Restaurante\" component={RestaurantDishes}/>\n        <Tab.Screen name=\"Pedidos\" component={OrdersStack}/>\n        <Tab.Screen name=\"Logout\" component={Logout}/>\n      </Tab.Navigator>\n    </NavigationContainer>);\n}\n\n\nexport function Logout({navigation}) {\n\n  Restart();\n  return(<></>);\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}