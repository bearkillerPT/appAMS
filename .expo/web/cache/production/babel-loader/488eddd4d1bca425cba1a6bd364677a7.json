{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import TextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{NavigationContainer}from'@react-navigation/native';import{createStackNavigator}from'@react-navigation/stack';import ClienteApp from\"./screens/AppCliente/AppClientes\";import RestauranteApp from\"./screens/AppRestaurante/AppRestaurante\";var users={\"cliente\":{\"type\":\"cliente\",\"password\":\"cliente\"},\"restaurante\":{\"type\":\"restaurante\",\"password\":\"restaurante\",\"restaurante\":\"Vegifruit\"},\"estafeta\":{\"type\":\"estafeta\",\"password\":\"estafeta\"}};var Tab=createStackNavigator();export default function AppContent(){return React.createElement(NavigationContainer,{independent:true},React.createElement(Tab.Navigator,{initialRouteName:\"Home\",headerMode:\"none\"},React.createElement(Tab.Screen,{name:\"Home\",component:Login}),React.createElement(Tab.Screen,{name:\"AppCliente\",component:ClienteApp}),React.createElement(Tab.Screen,{name:\"AppRestaurante\",component:RestauranteApp})));}function Login(_ref){var navigation=_ref.navigation;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];return React.createElement(View,{style:styles.container},React.createElement(Text,{style:styles.title},\"Nutrilink\"),React.createElement(View,{style:styles.loginContainer},React.createElement(View,{style:styles.inputView},React.createElement(TextInput,{placeholder:\"Username\",style:styles.input,onChangeText:function onChangeText(username){return setUser(username);}})),React.createElement(View,{style:styles.inputView},React.createElement(TextInput,{placeholder:\"Password\",style:styles.input,onChangeText:function onChangeText(pass){return setPassword(pass);},secureTextEntry:true})),React.createElement(TouchableOpacity,{style:styles.loginButtonContainer,onPress:function onPress(){for(var _i=0,_Object$keys=Object.keys(users);_i<_Object$keys.length;_i++){var typeUser=_Object$keys[_i];if(user===typeUser){switch(users[user].type){case\"cliente\":navigation.push(\"AppCliente\");break;case\"restaurante\":navigation.push(\"AppRestaurante\",{restaurante:users[user].restaurante});break;case\"estafeta\":navigation.push(\"AppEstafeta\");break;default:break;}}}}},React.createElement(Text,{style:styles.loginButtonText},\"Login\"))));}var goToApp=function goToApp(navigation,user,password){console.log(navigation);};var styles=StyleSheet.create({container:{backgroundColor:'darkcyan',alignItems:'center',flex:1},loginContainer:{backgroundColor:'darkcyan',alignItems:'center',justifyContent:'center',flex:1},title:{borderTopWidth:100,borderTopColor:'darkcyan',fontSize:40,fontWeight:'bold',color:'cornsilk'},inputView:{borderBottomWidth:10,borderBottomColor:'darkcyan'},input:{backgroundColor:'darkgray',padding:15,borderRadius:5},loginButtonContainer:{elevation:8,backgroundColor:\"#009688\",borderRadius:10,paddingVertical:10,paddingHorizontal:12},loginButtonText:{fontSize:18,color:\"#fff\",fontWeight:\"bold\",alignSelf:\"center\",textTransform:\"uppercase\"}});","map":{"version":3,"sources":["D:/dev/appAmsree/App.js"],"names":["React","useState","NavigationContainer","createStackNavigator","ClienteApp","RestauranteApp","users","Tab","AppContent","Login","navigation","user","setUser","password","setPassword","styles","container","title","loginContainer","inputView","input","username","pass","loginButtonContainer","Object","keys","typeUser","type","push","restaurante","loginButtonText","goToApp","console","log","StyleSheet","create","backgroundColor","alignItems","flex","justifyContent","borderTopWidth","borderTopColor","fontSize","fontWeight","color","borderBottomWidth","borderBottomColor","padding","borderRadius","elevation","paddingVertical","paddingHorizontal","alignSelf","textTransform"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { TextInput, StyleSheet, View, Text, TouchableOpacity } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport ClienteApp from './screens/AppCliente/AppClientes';\r\nimport RestauranteApp from './screens/AppRestaurante/AppRestaurante';\r\n\r\n\r\nconst users = {\r\n    \"cliente\": {\r\n        \"type\": \"cliente\",\r\n        \"password\": \"cliente\",\r\n    },\r\n    \"restaurante\": {\r\n        \"type\": \"restaurante\",\r\n        \"password\": \"restaurante\",\r\n        \"restaurante\" : \"Vegifruit\"\r\n    },\r\n    \"estafeta\": {\r\n        \"type\": \"estafeta\",\r\n        \"password\": \"estafeta\",\r\n    },\r\n}\r\n\r\nconst Tab = createStackNavigator();\r\n\r\nexport default function AppContent() {\r\n    return (\r\n        <NavigationContainer independent={true}>\r\n            <Tab.Navigator initialRouteName='Home' headerMode='none'>\r\n                <Tab.Screen name=\"Home\" component={Login} />\r\n                <Tab.Screen name=\"AppCliente\" component={ClienteApp}/>\r\n                <Tab.Screen name=\"AppRestaurante\" component={RestauranteApp}/>\r\n            </Tab.Navigator>\r\n        </NavigationContainer>);\r\n}\r\n\r\n\r\nfunction Login({ navigation }) {\r\n    const [user, setUser] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Nutrilink</Text>\r\n            <View style={styles.loginContainer}>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Username' style={styles.input} onChangeText={username => setUser(username)} />\r\n                </View>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Password' style={styles.input} onChangeText={pass => setPassword(pass)} secureTextEntry />\r\n                </View>\r\n                <TouchableOpacity style={styles.loginButtonContainer} onPress={() => {\r\n                    for (let typeUser of Object.keys(users))\r\n                        if (user === typeUser) {\r\n                            switch (users[user].type) {\r\n                                case \"cliente\":\r\n                                    navigation.push(\"AppCliente\");\r\n                                    break;\r\n                                case \"restaurante\":\r\n                                    navigation.push(\"AppRestaurante\", {restaurante: users[user].restaurante});\r\n                                    break;\r\n                                case \"estafeta\":\r\n                                    navigation.push(\"AppEstafeta\");\r\n                                    break;\r\n                                default: \r\n                                    break;\r\n                            }\r\n                        }\r\n                }}>\r\n                    <Text style={styles.loginButtonText}>Login</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst goToApp = (navigation, user, password,) => {\r\n    console.log(navigation)\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        flex: 1\r\n\r\n    },\r\n    loginContainer: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: 1\r\n    },\r\n    title: {\r\n        borderTopWidth: 100,\r\n        borderTopColor: 'darkcyan',\r\n        fontSize: 40,\r\n        fontWeight: 'bold',\r\n        color: 'cornsilk'\r\n    },\r\n    inputView: {\r\n        borderBottomWidth: 10,\r\n        borderBottomColor: 'darkcyan'\r\n    },\r\n    input: {\r\n        backgroundColor: 'darkgray',\r\n        padding: 15,\r\n        borderRadius: 5,\r\n    },\r\n    loginButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12\r\n    },\r\n    loginButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}