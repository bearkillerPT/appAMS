{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect,useContext,useCallback}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Image from\"react-native-web/dist/exports/Image\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import Icon from\"@expo/vector-icons/MaterialCommunityIcons\";import{store,db,images}from\"../../App\";export default function RestauranteMenu(_ref){var route=_ref.route;var user=store.getState().cartReducer.user;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),restaurante=_useState2[0],setRestaurante=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),restaurants=_useState4[0],setRestaurants=_useState4[1];getRestaurante(user,setRestaurante,setRestaurants);if(restaurante==\"\"||Object.keys(restaurants).length==0)return React.createElement(View,null,React.createElement(Text,null,\"Sorry\"));return React.createElement(View,{style:{flex:1}},React.createElement(Text,{style:styles.restaurantesOffer},\"Pratos Disponibilizados:\"),React.createElement(ScrollView,null,Object.keys(restaurants[restaurante].Pratos).map(function(prato){return React.createElement(TouchableHighlight,{underlayColor:\"#DDDDDD\",activeOpacity:0.3,style:styles.button,key:restaurants[restaurante].Pratos[prato].Id,onPress:function onPress(){}},React.createElement(View,{style:styles.containerRow},React.createElement(View,{style:styles.containerRow},React.createElement(Image,{style:styles.image,source:getImageByName(restaurants[restaurante].Pratos[prato].image)})),React.createElement(View,{style:styles.containerColumn},React.createElement(Text,{style:styles.restaurantesOffer},restaurants[restaurante].Pratos[prato].Name),React.createElement(Text,{style:styles.foodText},\"Op\\xE7\\xF5es : \",restaurants[restaurante].Pratos[prato].Opcoes,\"\\n\",\"Pre\\xE7o : \",restaurants[restaurante].Pratos[prato].Preco,\" \\u20AC\")),React.createElement(TouchableHighlight,{underlayColor:\"#DDDDDD\",activeOpacity:0.3,style:styles.delButton,onPress:function onPress(){db.ref(\"restaurantes/\"+restaurante+\"/Pratos/\"+prato).remove();getRestaurante(user,setRestaurante,setRestaurants);}},React.createElement(Icon,{name:\"delete\",size:25}))));})));}var getImageByName=function getImageByName(imageName){var img=images[imageName];if(img!=null)return img;return images[\"default\"];};function getRestaurante(user,setRestaurante,setRestaurants){return _regeneratorRuntime.async(function getRestaurante$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(db.ref(\"Users/\"+user).once('value').then(function(res){return setRestaurante(res.val()[\"restaurante\"]);}));case 2:_context.next=4;return _regeneratorRuntime.awrap(db.ref(\"restaurantes\").once('value').then(function(res){return setRestaurants(res.val());}));case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);}var styles=StyleSheet.create({containerRow:{paddingBottom:10,flexDirection:'row'},containerColumn:{paddingLeft:10,paddingBottom:10,flexDirection:'column'},restaurantesOffer:{fontSize:15,fontWeight:'bold',textAlign:'left',color:'black'},foodText:{fontSize:12,textAlign:'left'},button:{padding:7},image:{width:150,height:100},delButton:{flex:1,flexDirection:'row',justifyContent:'center',alignSelf:'auto'}});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppRestaurante/Pratos.js"],"names":["React","useState","useEffect","useContext","useCallback","Icon","store","db","images","RestauranteMenu","route","user","getState","cartReducer","restaurante","setRestaurante","restaurants","setRestaurants","getRestaurante","Object","keys","length","flex","styles","restaurantesOffer","Pratos","map","prato","button","Id","containerRow","image","getImageByName","containerColumn","Name","foodText","Opcoes","Preco","delButton","ref","remove","imageName","img","once","then","res","val","StyleSheet","create","paddingBottom","flexDirection","paddingLeft","fontSize","fontWeight","textAlign","color","padding","width","height","justifyContent","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { store, db, images} from '../../App';\nexport default function RestauranteMenu({ route }) {\n    //<Image so(urce={restaurante.image} style={styles.image}/>\n    let user = store.getState().cartReducer.user;\n    const [restaurante, setRestaurante] = useState(\"\");\n    const [restaurants, setRestaurants] = useState({});\n    getRestaurante(user, setRestaurante, setRestaurants);\n    if (restaurante == \"\" || Object.keys(restaurants).length == 0) return (<View><Text>Sorry</Text></View>);\n    return (\n        <View style={{flex: 1}}>\n            <Text style={styles.restaurantesOffer}>Pratos Disponibilizados:</Text>\n            <ScrollView>{\n                Object.keys(restaurants[restaurante].Pratos).map(prato => {\n                    return (\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={restaurants[restaurante].Pratos[prato].Id} onPress={() => { }}>\n                            <View style={styles.containerRow}>\n                                <View style={styles.containerRow}>\n                                    <Image style={styles.image} source={getImageByName(restaurants[restaurante].Pratos[prato].image)} />\n                                </View>\n                                <View style={styles.containerColumn}>\n                                    <Text style={styles.restaurantesOffer}>{restaurants[restaurante].Pratos[prato].Name}</Text>\n                                    <Text style={styles.foodText}>Opções : {restaurants[restaurante].Pratos[prato].Opcoes}\n                                        {\"\\n\"}\n                                Preço : {restaurants[restaurante].Pratos[prato].Preco} €</Text>\n                                </View>\n                                <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.delButton} onPress={() => {\n                                    db.ref(\"restaurantes/\" + restaurante + \"/Pratos/\" + prato).remove();\n                                    getRestaurante(user, setRestaurante, setRestaurants);\n                                }}>\n                                    <Icon name=\"delete\" size={25} />\n                                </TouchableHighlight>\n                            </View>\n                        </TouchableHighlight>\n                    );\n                })\n            }</ScrollView>\n        </View>\n\n    );\n}\n\nconst getImageByName = (imageName) => {\n    let img = images[imageName]\n    if (img != null) return img\n    return images[\"default\"]\n}\n\nasync function getRestaurante(user, setRestaurante, setRestaurants) {\n    await db.ref(\"Users/\" + user).once('value').then(res => setRestaurante(res.val()[\"restaurante\"]));\n    await db.ref(\"restaurantes\").once('value').then(res => setRestaurants(res.val()));\n}\n\nconst styles = StyleSheet.create({\n    containerRow: {\n        paddingBottom: 10,\n        flexDirection: 'row'\n    },\n    containerColumn: {\n        paddingLeft: 10,\n        paddingBottom: 10,\n        flexDirection: 'column'\n    },\n    restaurantesOffer: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'left',\n        color: 'black'\n    },\n    foodText: {\n        fontSize: 12,\n        textAlign: 'left',\n\n    },\n    button: {\n        padding: 7,\n    },\n    image: {\n        width: 150,\n        height: 100,\n    },\n    delButton: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignSelf: 'auto'\n\n    },\n});"]},"metadata":{},"sourceType":"module"}