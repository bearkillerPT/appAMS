{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{createStackNavigator}from'@react-navigation/stack';import{db,images,store}from\"../../App\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Image from\"react-native-web/dist/exports/Image\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TextInput from\"react-native-web/dist/exports/TextInput\";var imgQuichVeg=require(\"../../assets/quicheVegsGluten.jpg\");import Icon from\"@expo/vector-icons/MaterialCommunityIcons\";var imgCremeEspi=require(\"../../assets/cremedeespinafres.jpg\");var imgSaladaQSerra=require(\"../../assets/saladaqueijoserra.jpg\");export function PedidoScreen(_ref){var route=_ref.route,navigation=_ref.navigation;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),morada=_useState2[0],setMorada=_useState2[1];var cart=route.params.cart;var user=route.params.user;var restaurante=\"\";return React.createElement(View,{style:styles.container},React.createElement(Text,{style:styles.title},\"Nutrilink\"),React.createElement(View,{style:styles.containerColumn},React.createElement(View,{style:styles.inputView},React.createElement(Text,{style:{fontSize:15,fontWeight:'bold',textAlign:'left',color:\"white\"}},\"Pratos:\"),Object.keys(cart).map(function(prato){restaurante=cart[prato].Restaurante;return React.createElement(View,{key:cart[prato].Id},React.createElement(Text,{style:{color:\"white\",paddingHorizontal:10}},cart[prato].Name));})),React.createElement(View,{style:styles.inputView},React.createElement(Text,{style:{fontSize:15,fontWeight:'bold',textAlign:'left',color:\"white\"}},\"Restaurante:\"),React.createElement(Text,{style:{color:\"white\",paddingHorizontal:10}},restaurante)),React.createElement(View,{style:styles.inputView},React.createElement(TextInput,{placeholder:\"Morada\",style:styles.input,onChangeText:function onChangeText(morada){return setMorada(morada);}})),React.createElement(View,{style:styles.containerRow},React.createElement(TouchableOpacity,{style:styles.payButtonContainer,onPress:function onPress(){db.ref(\"restaurantes/\"+restaurante+\"/pedidos\").push({\"Id\":\"cart\"+morada,\"Pratos\":cart,\"Status\":\"ordered\",\"Morada\":morada});db.ref(\"Users/\"+user+\"/cart\").set({});navigation.goBack();}},React.createElement(Text,{style:styles.payButtonText},\"Confirmar\")))));}export function CartScreen(_ref2){var navigation=_ref2.navigation;var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),cart=_useState4[0],setCart=_useState4[1];var user=store.getState().cartReducer.user;var dispatch=useDispatch();getCart(user,setCart);useEffect(function(){setTimeout(function(){return getCart(user,setCart);},1000);if(cart==null)setTimeout(function(){return setCart({});},1000);},[cart]);var getTotal=function getTotal(){if(cart==null)return 0;var res=0;for(var _i=0,_Object$keys=Object.keys(cart);_i<_Object$keys.length;_i++){var prato=_Object$keys[_i];res+=cart[prato].Preco;}return res;};if(cart==null)return React.createElement(View,null,React.createElement(Text,{style:styles.restaurantesOffer},\"Pre\\xE7o total: \",getTotal(),\"\\u20AC\"),React.createElement(TouchableOpacity,{style:styles.payButtonContainer},React.createElement(Text,{style:styles.payButtonText},\"Pagar\")));return React.createElement(View,null,React.createElement(ScrollView,null,Object.keys(cart).map(function(prato){return React.createElement(TouchableHighlight,{underlayColor:\"#DDDDDD\",style:styles.button,key:prato},React.createElement(View,{style:styles.containerRow},React.createElement(View,{style:styles.containerRow},React.createElement(Image,{style:styles.image,source:getImageByName(cart[prato].image)})),React.createElement(View,{style:styles.containerColumn},React.createElement(Text,{style:styles.restaurantesOffer},cart[prato].Name),React.createElement(Text,{style:styles.foodText},\"Op\\xE7\\xF5es : \",cart[prato].Opcoes,\"\\n\",\"Pre\\xE7o : \",cart[prato].Preco,\" \\u20AC\")),React.createElement(TouchableHighlight,{underlayColor:\"#DDDDDD\",activeOpacity:0.3,style:styles.delButton,onPress:function onPress(){db.ref(\"Users/\"+user+\"/cart/\"+prato).remove();db.ref(\"Users/\"+user+\"/cart\").once('value').then(function(res){setCart(res.val());});}},React.createElement(Icon,{name:\"delete\",size:25}))));})),React.createElement(Text,{style:styles.restaurantesOffer},\"Pre\\xE7o total: \",getTotal(),\"\\u20AC\"),React.createElement(TouchableOpacity,{style:styles.payButtonContainer,onPress:function onPress(){return navigation.push(\"Pedido\",{cart:cart,user:user});}},React.createElement(Text,{style:styles.payButtonText},\"Pagar\")));}var Stack=createStackNavigator();function getCart(user,setCart){db.ref(\"Users/\"+user+\"/cart\").once('value').then(function(res){setCart(res.val());});}export default function Cart(route){return React.createElement(Stack.Navigator,{initialroute:'Carrinho',screenOptions:{headerTitleAlign:'center',headerStyle:{backgroundColor:'darkcyan'},headerTintColor:'white'}},React.createElement(Stack.Screen,{name:\"Carrinho\",component:CartScreen}),React.createElement(Stack.Screen,{name:\"Pedido\",component:PedidoScreen}));}var getImageByName=function getImageByName(imageName){var img=images[imageName];if(img!=null)return img;return images[\"default\"];};var mapStateToProps=function mapStateToProps(state){return{cartList:state.cartReducer.cart};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{add:function add(prato){return dispatch({type:\"addPrato\",prato:prato});}};};var styles=StyleSheet.create({container:{backgroundColor:'darkcyan',alignItems:'center',flex:1},containerRow:{flexDirection:'row'},containerColumn:{paddingLeft:10,paddingBottom:10,flexDirection:'column'},loginContainer:{backgroundColor:'darkcyan',alignItems:'center',justifyContent:'center',flex:1},title:{borderTopWidth:100,borderTopColor:'darkcyan',fontSize:40,fontWeight:'bold',color:'cornsilk'},inputView:{borderBottomWidth:10,borderBottomColor:'darkcyan'},input:{backgroundColor:'darkgray',padding:15,borderRadius:5},restaurantesOffer:{fontSize:15,fontWeight:'bold',textAlign:'left',color:'black'},foodText:{fontSize:12,textAlign:'left'},button:{padding:7,backgroundColor:\"#DDDDDD\"},delButton:{flex:1,flexDirection:'row',justifyContent:'center',alignSelf:'center'},image:{width:150,height:100},payButtonContainer:{elevation:8,backgroundColor:\"#009688\",borderRadius:10,paddingVertical:10,paddingHorizontal:12},payButtonText:{fontSize:18,color:\"#fff\",fontWeight:\"bold\",alignSelf:\"center\",textTransform:\"uppercase\"}});","map":{"version":3,"sources":["D:/dev/appAmsree/screens/AppCliente/Cart.js"],"names":["React","useState","useEffect","useSelector","useDispatch","createStackNavigator","db","images","store","imgQuichVeg","require","Icon","imgCremeEspi","imgSaladaQSerra","PedidoScreen","route","navigation","morada","setMorada","cart","params","user","restaurante","styles","container","title","containerColumn","inputView","fontSize","fontWeight","textAlign","color","Object","keys","map","prato","Restaurante","Id","paddingHorizontal","Name","input","containerRow","payButtonContainer","ref","push","set","goBack","payButtonText","CartScreen","setCart","getState","cartReducer","dispatch","getCart","setTimeout","getTotal","res","Preco","restaurantesOffer","button","image","getImageByName","foodText","Opcoes","delButton","remove","once","then","val","Stack","Cart","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","imageName","img","mapStateToProps","state","cartList","mapDispatchToProps","add","type","StyleSheet","create","alignItems","flex","flexDirection","paddingLeft","paddingBottom","loginContainer","justifyContent","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","padding","borderRadius","alignSelf","width","height","elevation","paddingVertical","textTransform"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,oBAAT,KAAqC,yBAArC,CACA,OAASC,EAAT,CAAaC,MAAb,CAAqBC,KAArB,iB,ggBAEA,GAAIC,CAAAA,WAAW,CAAGC,OAAO,qCAAzB,CACA,MAAOC,CAAAA,IAAP,iDACA,GAAIC,CAAAA,YAAY,CAAGF,OAAO,sCAA1B,CACA,GAAIG,CAAAA,eAAe,CAAGH,OAAO,sCAA7B,CAGA,MAAO,SAASI,CAAAA,YAAT,MAA6C,IAArBC,CAAAA,KAAqB,MAArBA,KAAqB,CAAdC,UAAc,MAAdA,UAAc,eACpBf,QAAQ,CAAC,EAAD,CADY,wCACzCgB,MADyC,eACjCC,SADiC,eAEhD,GAAIC,CAAAA,IAAI,CAAGJ,KAAK,CAACK,MAAN,CAAaD,IAAxB,CACA,GAAIE,CAAAA,IAAI,CAAGN,KAAK,CAACK,MAAN,CAAaC,IAAxB,CACA,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,MACI,qBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACC,SAApB,EACI,oBAAC,IAAD,EAAM,KAAK,CAAED,MAAM,CAACE,KAApB,cADJ,CAEI,oBAAC,IAAD,EAAM,KAAK,CAAEF,MAAM,CAACG,eAApB,EACI,oBAAC,IAAD,EAAM,KAAK,CAAEH,MAAM,CAACI,SAApB,EACI,oBAAC,IAAD,EAAM,KAAK,CAAE,CACTC,QAAQ,CAAE,EADD,CAETC,UAAU,CAAE,MAFH,CAGTC,SAAS,CAAE,MAHF,CAITC,KAAK,CAAE,OAJE,CAAb,YADJ,CAQQC,MAAM,CAACC,IAAP,CAAYd,IAAZ,EAAkBe,GAAlB,CAAsB,SAACC,KAAD,CAAW,CAC7Bb,WAAW,CAAGH,IAAI,CAACgB,KAAD,CAAJ,CAAYC,WAA1B,CACA,MAAQ,qBAAC,IAAD,EAAM,GAAG,CAAEjB,IAAI,CAACgB,KAAD,CAAJ,CAAYE,EAAvB,EAA2B,oBAAC,IAAD,EAAM,KAAK,CAAE,CAACN,KAAK,CAAE,OAAR,CAAiBO,iBAAiB,CAAE,EAApC,CAAb,EAAwDnB,IAAI,CAACgB,KAAD,CAAJ,CAAYI,IAApE,CAA3B,CAAR,CACH,CAHD,CARR,CADJ,CAcI,oBAAC,IAAD,EAAM,KAAK,CAAEhB,MAAM,CAACI,SAApB,EACA,oBAAC,IAAD,EAAM,KAAK,CAAE,CACLC,QAAQ,CAAE,EADL,CAELC,UAAU,CAAE,MAFP,CAGLC,SAAS,CAAE,MAHN,CAILC,KAAK,CAAE,OAJF,CAAb,iBADA,CAOI,oBAAC,IAAD,EAAM,KAAK,CAAE,CAACA,KAAK,CAAE,OAAR,CAAiBO,iBAAiB,CAAE,EAApC,CAAb,EAAwDhB,WAAxD,CAPJ,CAdJ,CAuBI,oBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACI,SAApB,EACI,oBAAC,SAAD,EAAW,WAAW,CAAC,QAAvB,CAAgC,KAAK,CAAEJ,MAAM,CAACiB,KAA9C,CAAqD,YAAY,CAAE,sBAAAvB,MAAM,QAAIC,CAAAA,SAAS,CAACD,MAAD,CAAb,EAAzE,EADJ,CAvBJ,CA0BI,oBAAC,IAAD,EAAM,KAAK,CAAEM,MAAM,CAACkB,YAApB,EACI,oBAAC,gBAAD,EAAkB,KAAK,CAAElB,MAAM,CAACmB,kBAAhC,CAAoD,OAAO,CAAE,kBAAM,CAC/DpC,EAAE,CAACqC,GAAH,CAAO,gBAAkBrB,WAAlB,CAAgC,UAAvC,EAAmDsB,IAAnD,CAAwD,CACpD,KAAM,OAAS3B,MADqC,CAEpD,SAAWE,IAFyC,CAGpD,SAAW,SAHyC,CAIpD,SAAWF,MAJyC,CAAxD,EAOAX,EAAE,CAACqC,GAAH,CAAO,SAAWtB,IAAX,CAAkB,OAAzB,EAAkCwB,GAAlC,CAAsC,EAAtC,EACA7B,UAAU,CAAC8B,MAAX,GACH,CAVD,EAWI,oBAAC,IAAD,EAAM,KAAK,CAAEvB,MAAM,CAACwB,aAApB,cAXJ,CADJ,CA1BJ,CAFJ,CADJ,CA+CH,CAED,MAAO,SAASC,CAAAA,UAAT,OAAoC,IAAdhC,CAAAA,UAAc,OAAdA,UAAc,gBACff,QAAQ,CAAC,EAAD,CADO,yCAChCkB,IADgC,eAC1B8B,OAD0B,eAEvC,GAAI5B,CAAAA,IAAI,CAAGb,KAAK,CAAC0C,QAAN,GAAiBC,WAAjB,CAA6B9B,IAAxC,CACA,GAAM+B,CAAAA,QAAQ,CAAGhD,WAAW,EAA5B,CACAiD,OAAO,CAAChC,IAAD,CAAO4B,OAAP,CAAP,CACA/C,SAAS,CAAC,UAAM,CACZoD,UAAU,CAAC,iBAAMD,CAAAA,OAAO,CAAChC,IAAD,CAAO4B,OAAP,CAAb,EAAD,CAA+B,IAA/B,CAAV,CACA,GAAI9B,IAAI,EAAI,IAAZ,CAAkBmC,UAAU,CAAC,iBAAML,CAAAA,OAAO,CAAC,EAAD,CAAb,EAAD,CAAoB,IAApB,CAAV,CAErB,CAJQ,CAIN,CAAC9B,IAAD,CAJM,CAAT,CAKA,GAAMoC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAIpC,IAAI,EAAI,IAAZ,CAAkB,MAAO,EAAP,CAClB,GAAIqC,CAAAA,GAAG,CAAG,CAAV,CACA,0BAAkBxB,MAAM,CAACC,IAAP,CAAYd,IAAZ,CAAlB,6BAAqC,CAAhC,GAAIgB,CAAAA,KAAK,iBAAT,CACDqB,GAAG,EAAIrC,IAAI,CAACgB,KAAD,CAAJ,CAAYsB,KAAnB,CACH,CACD,MAAOD,CAAAA,GAAP,CACH,CAPD,CAQA,GAAIrC,IAAI,EAAI,IAAZ,CAAkB,MACd,qBAAC,IAAD,MACI,oBAAC,IAAD,EAAM,KAAK,CAAEI,MAAM,CAACmC,iBAApB,qBAAqDH,QAAQ,EAA7D,UADJ,CAEI,oBAAC,gBAAD,EAAkB,KAAK,CAAEhC,MAAM,CAACmB,kBAAhC,EACI,oBAAC,IAAD,EAAM,KAAK,CAAEnB,MAAM,CAACwB,aAApB,UADJ,CAFJ,CADc,CAQlB,MACI,qBAAC,IAAD,MACI,oBAAC,UAAD,MACIf,MAAM,CAACC,IAAP,CAAYd,IAAZ,EAAkBe,GAAlB,CAAsB,SAAAC,KAAK,CAAI,CAC3B,MACI,qBAAC,kBAAD,EAAoB,aAAa,CAAE,SAAnC,CAA8C,KAAK,CAAEZ,MAAM,CAACoC,MAA5D,CAAoE,GAAG,CAAExB,KAAzE,EACI,oBAAC,IAAD,EAAM,KAAK,CAAEZ,MAAM,CAACkB,YAApB,EACI,oBAAC,IAAD,EAAM,KAAK,CAAElB,MAAM,CAACkB,YAApB,EACI,oBAAC,KAAD,EAAO,KAAK,CAAElB,MAAM,CAACqC,KAArB,CAA4B,MAAM,CAAEC,cAAc,CAAC1C,IAAI,CAACgB,KAAD,CAAJ,CAAYyB,KAAb,CAAlD,EADJ,CADJ,CAII,oBAAC,IAAD,EAAM,KAAK,CAAErC,MAAM,CAACG,eAApB,EACI,oBAAC,IAAD,EAAM,KAAK,CAAEH,MAAM,CAACmC,iBAApB,EAAwCvC,IAAI,CAACgB,KAAD,CAAJ,CAAYI,IAApD,CADJ,CAEI,oBAAC,IAAD,EAAM,KAAK,CAAEhB,MAAM,CAACuC,QAApB,oBAAwC3C,IAAI,CAACgB,KAAD,CAAJ,CAAY4B,MAApD,CACK,IADL,eAEK5C,IAAI,CAACgB,KAAD,CAAJ,CAAYsB,KAFjB,WAFJ,CAJJ,CAUI,oBAAC,kBAAD,EAAoB,aAAa,CAAE,SAAnC,CAA8C,aAAa,CAAE,GAA7D,CAAkE,KAAK,CAAElC,MAAM,CAACyC,SAAhF,CAA2F,OAAO,CAAE,kBAAM,CACtG1D,EAAE,CAACqC,GAAH,CAAO,SAAWtB,IAAX,CAAkB,QAAlB,CAA6Bc,KAApC,EAA2C8B,MAA3C,GACA3D,EAAE,CAACqC,GAAH,CAAO,SAAWtB,IAAX,CAAkB,OAAzB,EAAkC6C,IAAlC,CAAuC,OAAvC,EAAgDC,IAAhD,CAAqD,SAAAX,GAAG,CAAI,CAAEP,OAAO,CAACO,GAAG,CAACY,GAAJ,EAAD,CAAP,CAAoB,CAAlF,EAEH,CAJD,EAKI,oBAAC,IAAD,EAAM,IAAI,CAAC,QAAX,CAAoB,IAAI,CAAE,EAA1B,EALJ,CAVJ,CADJ,CADJ,CAwBH,CAzBD,CADJ,CADJ,CA6BI,oBAAC,IAAD,EAAM,KAAK,CAAE7C,MAAM,CAACmC,iBAApB,qBAAqDH,QAAQ,EAA7D,UA7BJ,CA8BI,oBAAC,gBAAD,EAAkB,KAAK,CAAEhC,MAAM,CAACmB,kBAAhC,CAAoD,OAAO,CAAE,yBAAM1B,CAAAA,UAAU,CAAC4B,IAAX,CAAgB,QAAhB,CAA0B,CAAEzB,IAAI,CAAJA,IAAF,CAAQE,IAAI,CAAJA,IAAR,CAA1B,CAAN,EAA7D,EACI,oBAAC,IAAD,EAAM,KAAK,CAAEE,MAAM,CAACwB,aAApB,UADJ,CA9BJ,CADJ,CAqCH,CAED,GAAMsB,CAAAA,KAAK,CAAGhE,oBAAoB,EAAlC,CAEA,QAASgD,CAAAA,OAAT,CAAiBhC,IAAjB,CAAuB4B,OAAvB,CAAgC,CAC5B3C,EAAE,CAACqC,GAAH,CAAO,SAAWtB,IAAX,CAAkB,OAAzB,EAAkC6C,IAAlC,CAAuC,OAAvC,EAAgDC,IAAhD,CAAqD,SAAAX,GAAG,CAAI,CAAEP,OAAO,CAACO,GAAG,CAACY,GAAJ,EAAD,CAAP,CAAoB,CAAlF,EACH,CAED,cAAe,SAASE,CAAAA,IAAT,CAAcvD,KAAd,CAAqB,CAChC,MACI,qBAAC,KAAD,CAAO,SAAP,EAAiB,YAAY,CAAE,UAA/B,CAA2C,aAAa,CAAE,CAAEwD,gBAAgB,CAAE,QAApB,CAA8BC,WAAW,CAAE,CAAEC,eAAe,CAAE,UAAnB,CAA3C,CAA4EC,eAAe,CAAE,OAA7F,CAA1D,EACI,oBAAC,KAAD,CAAO,MAAP,EAAc,IAAI,CAAC,UAAnB,CAA8B,SAAS,CAAE1B,UAAzC,EADJ,CAEI,oBAAC,KAAD,CAAO,MAAP,EAAc,IAAI,CAAC,QAAnB,CAA4B,SAAS,CAAElC,YAAvC,EAFJ,CADJ,CAMH,CAGD,GAAM+C,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACc,SAAD,CAAe,CAClC,GAAIC,CAAAA,GAAG,CAAGrE,MAAM,CAACoE,SAAD,CAAhB,CACA,GAAIC,GAAG,EAAI,IAAX,CAAiB,MAAOA,CAAAA,GAAP,CACjB,MAAOrE,CAAAA,MAAM,CAAC,SAAD,CAAb,CACH,CAJD,CAOA,GAAMsE,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAAE,MAAO,CAAEC,QAAQ,CAAED,KAAK,CAAC3B,WAAN,CAAkBhC,IAA9B,CAAP,CAA6C,CAAlF,CAGA,GAAM6D,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAC5B,QAAD,CAAc,CACrC,MAAO,CACH6B,GAAG,CAAE,aAAC9C,KAAD,QAAWiB,CAAAA,QAAQ,CAAC,CAAE8B,IAAI,CAAE,UAAR,CAAoB/C,KAAK,CAAEA,KAA3B,CAAD,CAAnB,EADF,CAAP,CAGH,CAJD,CAMA,GAAMZ,CAAAA,MAAM,CAAG4D,UAAU,CAACC,MAAX,CAAkB,CAC7B5D,SAAS,CAAE,CACPiD,eAAe,CAAE,UADV,CAEPY,UAAU,CAAE,QAFL,CAGPC,IAAI,CAAE,CAHC,CADkB,CAO7B7C,YAAY,CAAE,CACV8C,aAAa,CAAE,KADL,CAPe,CAU7B7D,eAAe,CAAE,CACb8D,WAAW,CAAE,EADA,CAEbC,aAAa,CAAE,EAFF,CAGbF,aAAa,CAAE,QAHF,CAVY,CAe7BG,cAAc,CAAE,CACZjB,eAAe,CAAE,UADL,CAEZY,UAAU,CAAE,QAFA,CAGZM,cAAc,CAAE,QAHJ,CAIZL,IAAI,CAAE,CAJM,CAfa,CAqB7B7D,KAAK,CAAE,CACHmE,cAAc,CAAE,GADb,CAEHC,cAAc,CAAE,UAFb,CAGHjE,QAAQ,CAAE,EAHP,CAIHC,UAAU,CAAE,MAJT,CAKHE,KAAK,CAAE,UALJ,CArBsB,CA4B7BJ,SAAS,CAAE,CACPmE,iBAAiB,CAAE,EADZ,CAEPC,iBAAiB,CAAE,UAFZ,CA5BkB,CAgC7BvD,KAAK,CAAE,CACHiC,eAAe,CAAE,UADd,CAEHuB,OAAO,CAAE,EAFN,CAGHC,YAAY,CAAE,CAHX,CAhCsB,CAqC7BvC,iBAAiB,CAAE,CACf9B,QAAQ,CAAE,EADK,CAEfC,UAAU,CAAE,MAFG,CAGfC,SAAS,CAAE,MAHI,CAIfC,KAAK,CAAE,OAJQ,CArCU,CA2C7B+B,QAAQ,CAAE,CACNlC,QAAQ,CAAE,EADJ,CAENE,SAAS,CAAE,MAFL,CA3CmB,CAgD7B6B,MAAM,CAAE,CACJqC,OAAO,CAAE,CADL,CAEJvB,eAAe,CAAE,SAFb,CAhDqB,CAoD7BT,SAAS,CAAE,CACPsB,IAAI,CAAE,CADC,CAEPC,aAAa,CAAE,KAFR,CAGPI,cAAc,CAAE,QAHT,CAIPO,SAAS,CAAE,QAJJ,CApDkB,CA2D7BtC,KAAK,CAAE,CACHuC,KAAK,CAAE,GADJ,CAEHC,MAAM,CAAE,GAFL,CA3DsB,CA+D7B1D,kBAAkB,CAAE,CAChB2D,SAAS,CAAE,CADK,CAEhB5B,eAAe,CAAE,SAFD,CAGhBwB,YAAY,CAAE,EAHE,CAIhBK,eAAe,CAAE,EAJD,CAKhBhE,iBAAiB,CAAE,EALH,CA/DS,CAsE7BS,aAAa,CAAE,CACXnB,QAAQ,CAAE,EADC,CAEXG,KAAK,CAAE,MAFI,CAGXF,UAAU,CAAE,MAHD,CAIXqE,SAAS,CAAE,QAJA,CAKXK,aAAa,CAAE,WALJ,CAtEc,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { db, images, store } from '../../App';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight, TouchableOpacity, TextInput } from 'react-native';\r\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\r\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\r\n\r\n\r\nexport function PedidoScreen({ route, navigation }) {\r\n    const [morada, setMorada] = useState(\"\");\r\n    let cart = route.params.cart;\r\n    let user = route.params.user;\r\n    let restaurante = \"\";\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Nutrilink</Text>\r\n            <View style={styles.containerColumn}>\r\n                <View style={styles.inputView}>\r\n                    <Text style={{\r\n                        fontSize: 15,\r\n                        fontWeight: 'bold',\r\n                        textAlign: 'left',\r\n                        color: \"white\"\r\n                    }}>Pratos:</Text>\r\n                    {\r\n                        Object.keys(cart).map((prato) => {\r\n                            restaurante = cart[prato].Restaurante;\r\n                            return (<View key={cart[prato].Id}><Text style={{color: \"white\", paddingHorizontal: 10 }}>{cart[prato].Name}</Text></View>);\r\n                        })\r\n                    }</View>\r\n                <View style={styles.inputView}>\r\n                <Text style={{\r\n                        fontSize: 15,\r\n                        fontWeight: 'bold',\r\n                        textAlign: 'left',\r\n                        color: \"white\"\r\n                    }}>Restaurante:</Text>\r\n                    <Text style={{color: \"white\", paddingHorizontal: 10 }}>{restaurante}</Text>\r\n                </View>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Morada' style={styles.input} onChangeText={morada => setMorada(morada)} />\r\n                </View>\r\n                <View style={styles.containerRow}>\r\n                    <TouchableOpacity style={styles.payButtonContainer} onPress={() => {\r\n                        db.ref(\"restaurantes/\" + restaurante + \"/pedidos\").push({\r\n                            \"Id\": \"cart\" + morada,\r\n                            \"Pratos\" : cart,\r\n                            \"Status\" : \"ordered\",\r\n                            \"Morada\" : morada\r\n\r\n                        });\r\n                        db.ref(\"Users/\" + user + \"/cart\").set({});\r\n                        navigation.goBack();\r\n                    }}>\r\n                        <Text style={styles.payButtonText}>Confirmar</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport function CartScreen({ navigation }) {\r\n    const [cart, setCart] = useState({});\r\n    let user = store.getState().cartReducer.user;\r\n    const dispatch = useDispatch();\r\n    getCart(user, setCart);\r\n    useEffect(() => {\r\n        setTimeout(() => getCart(user, setCart), 1000);\r\n        if (cart == null) setTimeout(() => setCart({}), 1000);\r\n\r\n    }, [cart])\r\n    const getTotal = () => {\r\n        if (cart == null) return 0;\r\n        let res = 0;\r\n        for (let prato of Object.keys(cart)) {\r\n            res += cart[prato].Preco;\r\n        }\r\n        return res;\r\n    }\r\n    if (cart == null) return (\r\n        <View>\r\n            <Text style={styles.restaurantesOffer}>Preço total: {getTotal()}€</Text>\r\n            <TouchableOpacity style={styles.payButtonContainer}>\r\n                <Text style={styles.payButtonText}>Pagar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n    return (\r\n        <View>\r\n            <ScrollView>{\r\n                Object.keys(cart).map(prato => {\r\n                    return (\r\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} style={styles.button} key={prato} >\r\n                            <View style={styles.containerRow}>\r\n                                <View style={styles.containerRow}>\r\n                                    <Image style={styles.image} source={getImageByName(cart[prato].image)} />\r\n                                </View>\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{cart[prato].Name}</Text>\r\n                                    <Text style={styles.foodText}>Opções : {cart[prato].Opcoes}\r\n                                        {\"\\n\"}\r\n                                Preço : {cart[prato].Preco} €</Text>\r\n                                </View>\r\n                                <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.delButton} onPress={() => {\r\n                                    db.ref(\"Users/\" + user + \"/cart/\" + prato).remove();\r\n                                    db.ref(\"Users/\" + user + \"/cart\").once('value').then(res => { setCart(res.val()) });\r\n\r\n                                }}>\r\n                                    <Icon name=\"delete\" size={25} />\r\n                                </TouchableHighlight>\r\n                            </View>\r\n\r\n                        </TouchableHighlight>\r\n\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n            <Text style={styles.restaurantesOffer}>Preço total: {getTotal()}€</Text>\r\n            <TouchableOpacity style={styles.payButtonContainer} onPress={() => navigation.push(\"Pedido\", { cart, user })}>\r\n                <Text style={styles.payButtonText}>Pagar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction getCart(user, setCart) {\r\n    db.ref(\"Users/\" + user + \"/cart\").once('value').then(res => { setCart(res.val()) });\r\n}\r\n\r\nexport default function Cart(route) {\r\n    return (\r\n        <Stack.Navigator initialroute={'Carrinho'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Carrinho\" component={CartScreen} />\r\n            <Stack.Screen name=\"Pedido\" component={PedidoScreen} />\r\n        </Stack.Navigator>);\r\n\r\n}\r\n\r\n\r\nconst getImageByName = (imageName) => {\r\n    let img = images[imageName]\r\n    if (img != null) return img\r\n    return images[\"default\"]\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => { return { cartList: state.cartReducer.cart } };\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        add: (prato) => dispatch({ type: \"addPrato\", prato: prato })\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        flex: 1\r\n\r\n    },\r\n    containerRow: {\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    loginContainer: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: 1\r\n    },\r\n    title: {\r\n        borderTopWidth: 100,\r\n        borderTopColor: 'darkcyan',\r\n        fontSize: 40,\r\n        fontWeight: 'bold',\r\n        color: 'cornsilk'\r\n    },\r\n    inputView: {\r\n        borderBottomWidth: 10,\r\n        borderBottomColor: 'darkcyan'\r\n    },\r\n    input: {\r\n        backgroundColor: 'darkgray',\r\n        padding: 15,\r\n        borderRadius: 5,\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n        backgroundColor: \"#DDDDDD\",\r\n    },\r\n    delButton: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center'\r\n\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    },\r\n    payButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12\r\n    },\r\n    payButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}